#if defined(YK__SOKOL_IMPL) && !defined(YK__SOKOL_NUKLEAR_IMPL)
#define YK__SOKOL_NUKLEAR_IMPL
#endif
#ifndef YK__SOKOL_NUKLEAR_INCLUDED
/*
    sokol_nuklear.h -- drop-in Nuklear renderer/event-handler for sokol_gfx.h

    Project URL: https://github.com/floooh/yk__sokol

    Do this:
        #define YK__SOKOL_IMPL or
        #define YK__SOKOL_NUKLEAR_IMPL

    before you include this file in *one* C or C++ file to create the
    implementation.

    The following defines are used by the implementation to select the
    platform-specific embedded shader code (these are the same defines as
    used by sokol_gfx.h and sokol_app.h):

    YK__SOKOL_GLCORE33
    YK__SOKOL_GLES2
    YK__SOKOL_GLES3
    YK__SOKOL_D3D11
    YK__SOKOL_METAL
    YK__SOKOL_WGPU

    Optionally provide the following configuration defines before including the
    implementation:

    YK__SOKOL_NUKLEAR_NO_SOKOL_APP    - don't depend on sokol_app.h (see below for details)

    Optionally provide the following macros before including the implementation
    to override defaults:

    YK__SOKOL_ASSERT(c)     - your own assert macro (default: assert(c))
    YK__SOKOL_NUKLEAR_API_DECL- public function declaration prefix (default: extern)
    YK__SOKOL_API_DECL      - same as YK__SOKOL_NUKLEAR_API_DECL
    YK__SOKOL_API_IMPL      - public function implementation prefix (default: -)

    If sokol_nuklear.h is compiled as a DLL, define the following before
    including the declaration or implementation:

    YK__SOKOL_DLL

    On Windows, YK__SOKOL_DLL will define YK__SOKOL_NUKLEAR_API_DECL as __declspec(dllexport)
    or __declspec(dllimport) as needed.

    Include the following headers before sokol_nuklear.h (both before including
    the declaration and implementation):

        sokol_gfx.h
        sokol_app.h     (except YK__SOKOL_NUKLEAR_NO_SOKOL_APP)

    Additionally, include the following headers before including the
    implementation:

        nuklear.h

    NOTE: Unlike most other yk__sokol-headers, the implementation must be compiled
    as C, compiling as C++ isn't supported. The interface is callable
    from C++ of course.


    FEATURE OVERVIEW:
    =================
    sokol_nuklear.h implements the initialization, rendering and event-handling
    code for Nuklear (https://github.com/Immediate-Mode-UI/Nuklear) on top of
    sokol_gfx.h and (optionally) sokol_app.h.

    The sokol_app.h dependency is optional and used for input event handling.
    If you only use sokol_gfx.h but not sokol_app.h in your application,
    define YK__SOKOL_NUKLEAR_NO_SOKOL_APP before including the implementation
    of sokol_nuklear.h, this will remove any dependency to sokol_app.h, but
    you must feed input events into Nuklear yourself.

    sokol_nuklear.h is not thread-safe, all calls must be made from the
    same thread where sokol_gfx.h is running.

    HOWTO:
    ======

    --- To initialize yk__sokol-nuklear, call:

        yk__snk_setup(const yk__snk_desc_t* desc)

        This will initialize Nuklear and create yk__sokol-gfx resources
        (two buffers for vertices and indices, a font texture and a pipeline-
        state-object).

        Use the following yk__snk_desc_t members to configure behaviour:

            int max_vertices
                The maximum number of vertices used for UI rendering, default is 65536.
                yk__sokol-nuklear will use this to compute the size of the vertex-
                and index-buffers allocated via sokol_gfx.h

            yk__sg_pixel_format color_format
                The color pixel format of the render pass where the UI
                will be rendered. The default is YK__SG_PIXELFORMAT_RGBA8

            yk__sg_pixel_format depth_format
                The depth-buffer pixel format of the render pass where
                the UI will be rendered. The default is SG_PIXELFORMAT_DEPTHSTENCIL.

            int sample_count
                The MSAA sample-count of the render pass where the UI
                will be rendered. The default is 1.

            float dpi_scale
                DPI scaling factor. Set this to the result of yk__sapp_dpi_scale().
                To render in high resolution on a Retina Mac this would
                typically be 2.0. The default value is 1.0

            bool no_default_font
                Set this to true if you don't want to use Nuklear's default
                font. In this case you need to initialize the font
                yourself after yk__snk_setup() is called.

    --- At the start of a frame, call:

        struct yk__nk_context *yk__snk_new_frame()

        This updates Nuklear's event handling state and then returns
        a Nuklear context pointer which you use to build the UI. For
        example:

        struct yk__nk_context *ctx = yk__snk_new_frame();
        if (nk_begin(ctx, "Demo", nk_rect(50, 50, 200, 200), ...


    --- at the end of the frame, before the yk__sg_end_pass() where you
        want to render the UI, call:

        yk__snk_render(int width, int height)

        where 'width' and 'height' are the dimensions of the rendering surface.
        For example, if you're using sokol_app.h and render to the default
        framebuffer:

        yk__snk_render(yk__sapp_width(), yk__sapp_height());

        This will convert Nuklear's command list into a vertex and index buffer,
        and then render that through sokol_gfx.h

    --- if you're using sokol_app.h, from inside the sokol_app.h event callback,
        call:

        void yk__snk_handle_event(const yk__sapp_event* ev);

    --- finally, on application shutdown, call

        yk__snk_shutdown()

    --- Note that for touch-based systems, like iOS, there is a wrapper around
        yk__nk_edit_string(...), called yk__snk_edit_string(...) which will show
        and hide the onscreen keyboard as required.

    LICENSE
    =======

    zlib/libpng license

    Copyright (c) 2020 Warren Merrifield

    This software is provided 'as-is', without any express or implied warranty.
    In no event will the authors be held liable for any damages arising from the
    use of this software.

    Permission is granted to anyone to use this software for any purpose,
    including commercial applications, and to alter it and redistribute it
    freely, subject to the following restrictions:

        1. The origin of this software must not be misrepresented; you must not
        claim that you wrote the original software. If you use this software in a
        product, an acknowledgment in the product documentation would be
        appreciated but is not required.

        2. Altered source versions must be plainly marked as such, and must not
        be misrepresented as being the original software.

        3. This notice may not be removed or altered from any source
        distribution.
*/
#define YK__SOKOL_NUKLEAR_INCLUDED (1)
#include <stdint.h>
#include <stdbool.h>
#if !defined(YK__SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before sokol_nuklear.h"
#endif
#if !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP) && !defined(YK__SOKOL_APP_INCLUDED)
#error "Please include sokol_app.h before sokol_nuklear.h"
#endif
#if defined(YK__SOKOL_API_DECL) && !defined(YK__SOKOL_NUKLEAR_API_DECL)
#define YK__SOKOL_NUKLEAR_API_DECL YK__SOKOL_API_DECL
#endif
#ifndef YK__SOKOL_NUKLEAR_API_DECL
#if defined(_WIN32) && defined(YK__SOKOL_DLL) && defined(YK__SOKOL_NUKLEAR_IMPL)
#define YK__SOKOL_NUKLEAR_API_DECL __declspec(dllexport)
#elif defined(_WIN32) && defined(YK__SOKOL_DLL)
#define YK__SOKOL_NUKLEAR_API_DECL __declspec(dllimport)
#else
#define YK__SOKOL_NUKLEAR_API_DECL extern
#endif
#endif
#ifdef __cplusplus
extern "C" {
#endif
typedef struct yk__snk_desc_t {
  int max_vertices;
  yk__sg_pixel_format color_format;
  yk__sg_pixel_format depth_format;
  int sample_count;
  float dpi_scale;
  bool no_default_font;
} yk__snk_desc_t;
YK__SOKOL_NUKLEAR_API_DECL void yk__snk_setup(const yk__snk_desc_t *desc);
YK__SOKOL_NUKLEAR_API_DECL struct yk__nk_context *yk__snk_new_frame(void);
YK__SOKOL_NUKLEAR_API_DECL void yk__snk_render(int width, int height);
#if !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP)
YK__SOKOL_NUKLEAR_API_DECL void yk__snk_handle_event(const yk__sapp_event *ev);
YK__SOKOL_NUKLEAR_API_DECL yk__nk_flags yk__snk_edit_string(
    struct yk__nk_context *ctx, yk__nk_flags flags, char *memory, int *len,
    int max, yk__nk_plugin_filter filter);
#endif
YK__SOKOL_NUKLEAR_API_DECL void yk__snk_shutdown(void);
#ifdef __cplusplus
} /* extern "C" */
/* reference-based equivalents for C++ */
inline void yk__snk_setup(const yk__snk_desc_t &desc) {
  return yk__snk_setup(&desc);
}
#endif
#endif /* YK__SOKOL_NUKLEAR_INCLUDED */
/*-- IMPLEMENTATION ----------------------------------------------------------*/
#ifdef YK__SOKOL_NUKLEAR_IMPL
#define YK__SOKOL_NUKLEAR_IMPL_INCLUDED (1)
#if !defined(YK__NK_UNDEFINED)
#error "Please include nuklear.h before the sokol_nuklear.h implementation"
#endif
#if !defined(YK__NK_INCLUDE_VERTEX_BUFFER_OUTPUT)
#error                                                                         \
    "Please ensure that YK__NK_INCLUDE_VERTEX_BUFFER_OUTPUT is #defined before including nuklear.h"
#endif
#ifdef __cplusplus
#error "The sokol_nuklear.h implementation must be compiled as C."
#endif
#include <stddef.h> /* offsetof */
#include <string.h> /* memset */
#if defined(__EMSCRIPTEN__) && !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP) &&     \
    !defined(YK__SOKOL_DUMMY_BACKEND)
#include <emscripten.h>
#endif
#ifndef YK__SOKOL_API_IMPL
#define YK__SOKOL_API_IMPL
#endif
#ifndef YK__SOKOL_DEBUG
#ifndef NDEBUG
#define YK__SOKOL_DEBUG (1)
#endif
#endif
#ifndef YK__SOKOL_ASSERT
#include <assert.h>
#define YK__SOKOL_ASSERT(c) assert(c)
#endif
#ifndef YK___SOKOL_PRIVATE
#if defined(__GNUC__) || defined(__clang__)
#define YK___SOKOL_PRIVATE __attribute__((unused)) static
#else
#define YK___SOKOL_PRIVATE static
#endif
#endif
/* helper macros */
#define yk___snk_def(val, def) (((val) == 0) ? (def) : (val))
typedef struct yk___snk_vertex_t {
  float pos[2];
  float uv[2];
  uint8_t col[4];
} yk___snk_vertex_t;
typedef struct yk___snk_vs_params_t {
  float disp_size[2];
  uint8_t _pad_8[8];
} yk___snk_vs_params_t;
typedef struct {
  yk__snk_desc_t desc;
  struct yk__nk_context ctx;
  struct yk__nk_font_atlas atlas;
  yk___snk_vs_params_t vs_params;
  size_t vertex_buffer_size;
  size_t index_buffer_size;
  yk__sg_buffer vbuf;
  yk__sg_buffer ibuf;
  yk__sg_image img;
  yk__sg_shader shd;
  yk__sg_pipeline pip;
  bool
      is_osx; /* return true if running on OSX (or HTML5 OSX), needed for copy/paste */
#if !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP)
  int mouse_pos[2];
  float mouse_scroll[2];
  bool mouse_did_move;
  bool mouse_did_scroll;
  bool btn_down[YK__NK_BUTTON_MAX];
  bool btn_up[YK__NK_BUTTON_MAX];
  char char_buffer[YK__NK_INPUT_MAX];
  bool keys_down[YK__NK_KEY_MAX];
  bool keys_up[YK__NK_KEY_MAX];
#endif
} yk___snk_state_t;
static yk___snk_state_t _snuklear;
/*
    Embedded source code compiled with:

    yk__sokol-shdc -i snuk.glsl -o snuk.h -l glsl330:glsl100:hlsl4:metal_macos:metal_ios:metal_sim:wgpu -b

    (not that for Metal and D3D11 byte code, yk__sokol-shdc must be run
    on macOS and Windows)

    @vs vs
    uniform vs_params {
        vec2 disp_size;
    };
    in vec2 position;
    in vec2 texcoord0;
    in vec4 color0;
    out vec2 uv;
    out vec4 color;
    void main() {
        gl_Position = vec4(((position/disp_size)-0.5)*vec2(2.0,-2.0), 0.5, 1.0);
        uv = texcoord0;
        color = color0;
    }
    @end

    @fs fs
    uniform sampler2D tex;
    in vec2 uv;
    in vec4 color;
    out vec4 frag_color;
    void main() {
        frag_color = texture(tex, uv) * color;
    }
    @end

    @program snuk vs fs
*/
#if defined(YK__SOKOL_GLCORE33)
static const char yk___snk_vs_source_glsl330[341] = {
    0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x33, 0x30,
    0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65,
    0x63, 0x34, 0x20, 0x76, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
    0x5b, 0x31, 0x5d, 0x3b, 0x0a, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x28,
    0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x30,
    0x29, 0x20, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x6f,
    0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x6f, 0x75, 0x74, 0x20,
    0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x3b, 0x0a, 0x6c, 0x61, 0x79,
    0x6f, 0x75, 0x74, 0x28, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    0x20, 0x3d, 0x20, 0x31, 0x29, 0x20, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63,
    0x32, 0x20, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b,
    0x0a, 0x6f, 0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f,
    0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x28,
    0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x32,
    0x29, 0x20, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f,
    0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20,
    0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20,
    0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
    0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x28, 0x28, 0x70, 0x6f,
    0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2f, 0x20, 0x76, 0x73, 0x5f,
    0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79,
    0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x35,
    0x29, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x32, 0x2e,
    0x30, 0x2c, 0x20, 0x2d, 0x32, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e,
    0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20,
    0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f,
    0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c,
    0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b,
    0x0a, 0x7d, 0x0a, 0x0a, 0x00,
};
static const char yk___snk_fs_source_glsl330[169] = {
    0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x33, 0x33, 0x30,
    0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61,
    0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x74, 0x65, 0x78, 0x3b,
    0x0a, 0x0a, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x28, 0x6c, 0x6f, 0x63,
    0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x30, 0x29, 0x20, 0x6f,
    0x75, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x72, 0x61, 0x67,
    0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76,
    0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76,
    0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x0a,
    0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a,
    0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x63,
    0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75,
    0x72, 0x65, 0x28, 0x74, 0x65, 0x78, 0x2c, 0x20, 0x75, 0x76, 0x29, 0x20,
    0x2a, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a,
    0x00,
};
#elif defined(YK__SOKOL_GLES2) || defined(YK__SOKOL_GLES3)
static const char yk___snk_vs_source_glsl100[307] = {
    0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x30,
    0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65,
    0x63, 0x34, 0x20, 0x76, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
    0x5b, 0x31, 0x5d, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
    0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x6f, 0x73, 0x69,
    0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e,
    0x67, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x3b, 0x0a, 0x61,
    0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63,
    0x32, 0x20, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b,
    0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63,
    0x34, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x61, 0x74, 0x74,
    0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20,
    0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x0a, 0x76, 0x6f, 0x69,
    0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20,
    0x20, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
    0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x28, 0x28,
    0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2f, 0x20, 0x76,
    0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5b, 0x30, 0x5d, 0x2e,
    0x78, 0x79, 0x29, 0x20, 0x2d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30,
    0x2e, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28,
    0x32, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x32, 0x2e, 0x30, 0x29, 0x2c, 0x20,
    0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20,
    0x20, 0x20, 0x20, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x63,
    0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63,
    0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
    0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,
};
static const char yk___snk_fs_source_glsl100[207] = {
    0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x31, 0x30, 0x30,
    0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6d,
    0x65, 0x64, 0x69, 0x75, 0x6d, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74,
    0x3b, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x20,
    0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x69, 0x6e, 0x74, 0x3b, 0x0a, 0x0a,
    0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x68, 0x69, 0x67, 0x68,
    0x70, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20,
    0x74, 0x65, 0x78, 0x3b, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e,
    0x67, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x32,
    0x20, 0x75, 0x76, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67,
    0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20,
    0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x64,
    0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20,
    0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74,
    0x61, 0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75,
    0x72, 0x65, 0x32, 0x44, 0x28, 0x74, 0x65, 0x78, 0x2c, 0x20, 0x75, 0x76,
    0x29, 0x20, 0x2a, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d,
    0x0a, 0x0a, 0x00,
};
#elif defined(YK__SOKOL_METAL)
static const uint8_t yk___snk_vs_bytecode_metal_macos[3216] = {
    0x4d, 0x54, 0x4c, 0x42, 0x01, 0x80, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x90, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0b, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x4e, 0x41, 0x4d, 0x45, 0x06, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x00,
    0x54, 0x59, 0x50, 0x45, 0x01, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x20,
    0x00, 0xef, 0xd7, 0x24, 0x0b, 0xf0, 0x26, 0xba, 0xcd, 0xc3, 0x6f, 0x48,
    0x91, 0x7a, 0x7c, 0x38, 0xca, 0xb8, 0xf1, 0xb1, 0xe3, 0xc7, 0x99, 0x8d,
    0xac, 0x39, 0x8e, 0x2f, 0xf8, 0xa3, 0x19, 0x68, 0x22, 0x4f, 0x46, 0x46,
    0x54, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x56, 0x45, 0x52, 0x53, 0x08, 0x00, 0x01, 0x00, 0x08,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x45, 0x4e, 0x44, 0x54, 0x45, 0x4e, 0x44,
    0x54, 0x37, 0x00, 0x00, 0x00, 0x56, 0x41, 0x54, 0x54, 0x22, 0x00, 0x03,
    0x00, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x80,
    0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x01, 0x80,
    0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x02, 0x80, 0x56, 0x41, 0x54,
    0x59, 0x05, 0x00, 0x03, 0x00, 0x04, 0x04, 0x06, 0x45, 0x4e, 0x44, 0x54,
    0x04, 0x00, 0x00, 0x00, 0x45, 0x4e, 0x44, 0x54, 0xde, 0xc0, 0x17, 0x0b,
    0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x60, 0x0b, 0x00, 0x00,
    0xff, 0xff, 0xff, 0xff, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
    0xd5, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x12, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
    0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
    0x1e, 0x04, 0x8b, 0x62, 0x80, 0x10, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
    0x84, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x49, 0x0a, 0x32, 0x44, 0x24,
    0x48, 0x0a, 0x90, 0x21, 0x23, 0xc4, 0x52, 0x80, 0x0c, 0x19, 0x21, 0x72,
    0x24, 0x07, 0xc8, 0x08, 0x11, 0x62, 0xa8, 0xa0, 0xa8, 0x40, 0xc6, 0xf0,
    0x01, 0x00, 0x00, 0x00, 0x51, 0x18, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00,
    0x1b, 0xc8, 0x25, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x80, 0x8a,
    0x18, 0x87, 0x77, 0x90, 0x07, 0x79, 0x28, 0x87, 0x71, 0xa0, 0x07, 0x76,
    0xc8, 0x87, 0x36, 0x90, 0x87, 0x77, 0xa8, 0x07, 0x77, 0x20, 0x87, 0x72,
    0x20, 0x87, 0x36, 0x20, 0x87, 0x74, 0xb0, 0x87, 0x74, 0x20, 0x87, 0x72,
    0x68, 0x83, 0x79, 0x88, 0x07, 0x79, 0xa0, 0x87, 0x36, 0x30, 0x07, 0x78,
    0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0xc0, 0x1c, 0xc2, 0x81,
    0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0x82, 0x1c, 0xd2, 0x61, 0x1e, 0xc2, 0x41,
    0x1c, 0xd8, 0xa1, 0x1c, 0xda, 0x80, 0x1e, 0xc2, 0x21, 0x1d, 0xd8, 0xa1,
    0x0d, 0xc6, 0x21, 0x1c, 0xd8, 0x81, 0x1d, 0xe6, 0x01, 0x30, 0x87, 0x70,
    0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x60, 0x87, 0x72, 0x98, 0x87, 0x79,
    0x68, 0x03, 0x78, 0x90, 0x87, 0x72, 0x18, 0x87, 0x74, 0x98, 0x87, 0x72,
    0x68, 0x03, 0x73, 0x80, 0x87, 0x76, 0x08, 0x07, 0x72, 0x00, 0xcc, 0x21,
    0x1c, 0xd8, 0x61, 0x1e, 0xca, 0x01, 0x20, 0xdc, 0xe1, 0x1d, 0xda, 0xc0,
    0x1c, 0xe4, 0x21, 0x1c, 0xda, 0xa1, 0x1c, 0xda, 0x00, 0x1e, 0xde, 0x21,
    0x1d, 0xdc, 0x81, 0x1e, 0xca, 0x41, 0x1e, 0xda, 0xa0, 0x1c, 0xd8, 0x21,
    0x1d, 0xda, 0x01, 0xa0, 0x07, 0x79, 0xa8, 0x87, 0x72, 0x00, 0x06, 0x77,
    0x78, 0x87, 0x36, 0x30, 0x07, 0x79, 0x08, 0x87, 0x76, 0x28, 0x87, 0x36,
    0x80, 0x87, 0x77, 0x48, 0x07, 0x77, 0xa0, 0x87, 0x72, 0x90, 0x87, 0x36,
    0x28, 0x07, 0x76, 0x48, 0x87, 0x76, 0x68, 0x03, 0x77, 0x78, 0x07, 0x77,
    0x68, 0x03, 0x76, 0x28, 0x87, 0x70, 0x30, 0x07, 0x80, 0x70, 0x87, 0x77,
    0x68, 0x83, 0x74, 0x70, 0x07, 0x73, 0x98, 0x87, 0x36, 0x30, 0x07, 0x78,
    0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0x80, 0x1e, 0xe4, 0xa1,
    0x1e, 0xca, 0x01, 0x20, 0xdc, 0xe1, 0x1d, 0xda, 0x40, 0x1d, 0xea, 0xa1,
    0x1d, 0xe0, 0xa1, 0x0d, 0xe8, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61,
    0x1e, 0x00, 0x73, 0x08, 0x07, 0x76, 0x98, 0x87, 0x72, 0x00, 0x08, 0x77,
    0x78, 0x87, 0x36, 0x70, 0x87, 0x70, 0x70, 0x87, 0x79, 0x68, 0x03, 0x73,
    0x80, 0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xe8, 0x41,
    0x1e, 0xea, 0xa1, 0x1c, 0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xe6, 0x21,
    0x1d, 0xce, 0xc1, 0x1d, 0xca, 0x81, 0x1c, 0xda, 0x40, 0x1f, 0xca, 0x41,
    0x1e, 0xde, 0x61, 0x1e, 0xda, 0xc0, 0x1c, 0xe0, 0xa1, 0x0d, 0xda, 0x21,
    0x1c, 0xe8, 0x01, 0x1d, 0x00, 0x7a, 0x90, 0x87, 0x7a, 0x28, 0x07, 0x80,
    0x70, 0x87, 0x77, 0x68, 0x03, 0x7a, 0x90, 0x87, 0x70, 0x80, 0x07, 0x78,
    0x48, 0x07, 0x77, 0x38, 0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74,
    0x00, 0xe8, 0x41, 0x1e, 0xea, 0xa1, 0x1c, 0x00, 0x62, 0x1e, 0xe8, 0x21,
    0x1c, 0xc6, 0x61, 0x1d, 0xda, 0x00, 0x1e, 0xe4, 0xe1, 0x1d, 0xe8, 0xa1,
    0x1c, 0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xda, 0x40, 0x1c, 0xea, 0xc1,
    0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x0d, 0xe6, 0x21, 0x1d, 0xf4, 0xa1,
    0x1c, 0x00, 0x3c, 0x00, 0x88, 0x7a, 0x70, 0x87, 0x79, 0x08, 0x07, 0x73,
    0x28, 0x87, 0x36, 0x30, 0x07, 0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a,
    0x40, 0x07, 0x80, 0x1e, 0xe4, 0xa1, 0x1e, 0xca, 0x01, 0x20, 0xea, 0x61,
    0x1e, 0xca, 0xa1, 0x0d, 0xe6, 0xe1, 0x1d, 0xcc, 0x81, 0x1e, 0xda, 0xc0,
    0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0x00, 0x73, 0x08, 0x07, 0x76,
    0x98, 0x87, 0x72, 0x00, 0x36, 0x18, 0x02, 0x01, 0x2c, 0x40, 0x05, 0x00,
    0x49, 0x18, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x84, 0x40, 0x00,
    0x89, 0x20, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x32, 0x22, 0x08, 0x09,
    0x20, 0x64, 0x85, 0x04, 0x13, 0x22, 0xa4, 0x84, 0x04, 0x13, 0x22, 0xe3,
    0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x88, 0x8c, 0x0b, 0x84, 0x84, 0x4c,
    0x10, 0x3c, 0x33, 0x00, 0xc3, 0x08, 0x02, 0x30, 0x8c, 0x40, 0x00, 0x77,
    0x49, 0x53, 0x44, 0x09, 0x93, 0xcf, 0x00, 0x48, 0x43, 0xff, 0x0e, 0x35,
    0xf9, 0x0f, 0x20, 0x28, 0xc4, 0x80, 0x87, 0x10, 0x39, 0x48, 0x9a, 0x22,
    0x4a, 0x98, 0xfc, 0x4a, 0xfa, 0x1f, 0x20, 0x02, 0x18, 0x09, 0x05, 0x31,
    0x88, 0x40, 0x08, 0xa5, 0x98, 0x08, 0x29, 0xb2, 0x81, 0x80, 0x39, 0x02,
    0x30, 0xc8, 0x81, 0x9c, 0x23, 0x00, 0x85, 0x41, 0x84, 0x40, 0x18, 0x46,
    0x20, 0x92, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0xb2, 0x70, 0x48,
    0x07, 0x79, 0xb0, 0x03, 0x3a, 0x68, 0x83, 0x70, 0x80, 0x07, 0x78, 0x60,
    0x87, 0x72, 0x68, 0x83, 0x76, 0x08, 0x87, 0x71, 0x78, 0x87, 0x79, 0xc0,
    0x87, 0x38, 0x80, 0x03, 0x37, 0x88, 0x83, 0x38, 0x70, 0x03, 0x38, 0xd8,
    0x70, 0x1b, 0xe5, 0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a,
    0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x90, 0x0e, 0x71,
    0xa0, 0x07, 0x78, 0xa0, 0x07, 0x78, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a,
    0x80, 0x07, 0x7a, 0x80, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
    0x10, 0x07, 0x76, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x6d, 0x90, 0x0e, 0x73,
    0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
    0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
    0x40, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
    0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a,
    0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0f, 0x71,
    0x60, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x6d,
    0x60, 0x0f, 0x72, 0x40, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
    0x20, 0x07, 0x6d, 0x60, 0x0f, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
    0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0f, 0x74, 0x80, 0x07, 0x7a,
    0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0f, 0x76,
    0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d,
    0x60, 0x0f, 0x79, 0x60, 0x07, 0x7a, 0x10, 0x07, 0x72, 0x80, 0x07, 0x7a,
    0x10, 0x07, 0x72, 0x80, 0x07, 0x6d, 0x60, 0x0f, 0x71, 0x20, 0x07, 0x78,
    0xa0, 0x07, 0x71, 0x20, 0x07, 0x78, 0xa0, 0x07, 0x71, 0x20, 0x07, 0x78,
    0xd0, 0x06, 0xf6, 0x10, 0x07, 0x79, 0x20, 0x07, 0x7a, 0x20, 0x07, 0x75,
    0x60, 0x07, 0x7a, 0x20, 0x07, 0x75, 0x60, 0x07, 0x6d, 0x60, 0x0f, 0x72,
    0x50, 0x07, 0x76, 0xa0, 0x07, 0x72, 0x50, 0x07, 0x76, 0xa0, 0x07, 0x72,
    0x50, 0x07, 0x76, 0xd0, 0x06, 0xf6, 0x50, 0x07, 0x71, 0x20, 0x07, 0x7a,
    0x50, 0x07, 0x71, 0x20, 0x07, 0x7a, 0x50, 0x07, 0x71, 0x20, 0x07, 0x6d,
    0x60, 0x0f, 0x71, 0x00, 0x07, 0x72, 0x40, 0x07, 0x7a, 0x10, 0x07, 0x70,
    0x20, 0x07, 0x74, 0xa0, 0x07, 0x71, 0x00, 0x07, 0x72, 0x40, 0x07, 0x6d,
    0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
    0x30, 0x84, 0x39, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8,
    0x02, 0x01, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x10,
    0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xda,
    0x11, 0x00, 0xca, 0x12, 0x18, 0x01, 0x28, 0x88, 0x22, 0x28, 0x84, 0x32,
    0x20, 0x1d, 0x6b, 0x50, 0x1e, 0x82, 0x60, 0x8c, 0x00, 0x04, 0x41, 0x50,
    0x04, 0x03, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00,
    0x1a, 0x03, 0x4c, 0x10, 0x97, 0x29, 0xa2, 0x25, 0x10, 0xab, 0x32, 0xb9,
    0xb9, 0xb4, 0x37, 0xb7, 0x21, 0x46, 0x52, 0x20, 0x80, 0x82, 0x50, 0xb9,
    0x1b, 0x43, 0x0b, 0x93, 0xfb, 0x9a, 0x4b, 0xd3, 0x2b, 0x1b, 0x62, 0x24,
    0x02, 0x22, 0x24, 0x06, 0xd9, 0x20, 0x08, 0x0e, 0x8e, 0xad, 0x0c, 0x84,
    0x89, 0xc9, 0xaa, 0x09, 0xc4, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x0d,
    0x24, 0x07, 0x46, 0xc6, 0x25, 0x86, 0x06, 0x04, 0xa5, 0xad, 0x8c, 0x2e,
    0x8c, 0xcd, 0xac, 0xac, 0x25, 0x07, 0x46, 0xc6, 0x25, 0x86, 0xc6, 0x25,
    0x27, 0x65, 0x88, 0x80, 0x10, 0x43, 0x8c, 0x44, 0x48, 0x88, 0x64, 0x60,
    0xd1, 0x54, 0x46, 0x17, 0xc6, 0x36, 0x04, 0x41, 0x8e, 0x44, 0x48, 0x84,
    0x64, 0xe0, 0x16, 0x96, 0x26, 0xe7, 0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6,
    0x56, 0xe6, 0x42, 0x56, 0xe6, 0xf6, 0x26, 0xd7, 0x36, 0xf7, 0x45, 0x96,
    0x36, 0x17, 0x26, 0xc6, 0x56, 0x36, 0x44, 0x40, 0x12, 0x72, 0x61, 0x69,
    0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x2e, 0x66, 0x61,
    0x73, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x61, 0x62,
    0x6c, 0x65, 0x43, 0x04, 0x64, 0x61, 0x19, 0x84, 0xa5, 0xc9, 0xb9, 0x8c,
    0xbd, 0xb5, 0xc1, 0xa5, 0xb1, 0x95, 0xb9, 0x98, 0xc9, 0x85, 0xb5, 0x95,
    0x89, 0xd5, 0x99, 0x99, 0x95, 0xc9, 0x7d, 0x99, 0x95, 0xd1, 0x8d, 0xa1,
    0x7d, 0x91, 0xa5, 0xcd, 0x85, 0x89, 0xb1, 0x95, 0x0d, 0x11, 0x90, 0x86,
    0x61, 0x10, 0x96, 0x26, 0xe7, 0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56,
    0xe6, 0xe2, 0x16, 0x46, 0x97, 0x66, 0x57, 0xf6, 0x45, 0xf6, 0x56, 0x27,
    0xc6, 0x56, 0xf6, 0x45, 0x96, 0x36, 0x17, 0x26, 0xc6, 0x56, 0x36, 0x44,
    0x40, 0x1e, 0x92, 0x41, 0x58, 0x9a, 0x9c, 0xcb, 0xd8, 0x5b, 0x1b, 0x5c,
    0x1a, 0x5b, 0x99, 0x8b, 0x5b, 0x18, 0x5d, 0x9a, 0x5d, 0xd9, 0x17, 0xdb,
    0x9b, 0xdb, 0xd9, 0x17, 0xdb, 0x9b, 0xdb, 0xd9, 0x17, 0x59, 0xda, 0x5c,
    0x98, 0x18, 0x5b, 0xd9, 0x10, 0x01, 0x89, 0x78, 0x06, 0x61, 0x69, 0x72,
    0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x2e, 0x6e, 0x61, 0x74,
    0x69, 0x76, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x63,
    0x74, 0x6f, 0x72, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
    0x43, 0x04, 0x64, 0x62, 0x14, 0x96, 0x26, 0xe7, 0x62, 0x57, 0x26, 0x47,
    0x57, 0x86, 0xf7, 0xf5, 0x56, 0x47, 0x07, 0x57, 0x47, 0xc7, 0xa5, 0x6e,
    0xae, 0x4c, 0x0e, 0x85, 0xed, 0x6d, 0xcc, 0x0d, 0x26, 0x85, 0x51, 0x58,
    0x9a, 0x9c, 0x4b, 0x98, 0xdc, 0xd9, 0x17, 0x5d, 0x1e, 0x5c, 0xd9, 0x97,
    0x5b, 0x58, 0x5b, 0x19, 0x0d, 0x33, 0xb6, 0xb7, 0x30, 0x3a, 0x19, 0x32,
    0x61, 0x69, 0x72, 0x2e, 0x61, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
    0x14, 0xea, 0xec, 0x86, 0x30, 0x48, 0x85, 0x58, 0xc8, 0x85, 0x60, 0x48,
    0x86, 0x68, 0x5c, 0xea, 0xe6, 0xca, 0xe4, 0x50, 0xd8, 0xde, 0xc6, 0xdc,
    0x62, 0x52, 0x68, 0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xd1, 0xb0, 0x18, 0x7b,
    0x63, 0x7b, 0x93, 0x1b, 0xc2, 0x20, 0x15, 0xc2, 0x21, 0x17, 0xd2, 0x21,
    0x19, 0xe2, 0x91, 0x09, 0x4b, 0x93, 0x73, 0x81, 0x7b, 0x9b, 0x4b, 0xa3,
    0x4b, 0x7b, 0x73, 0xe3, 0x72, 0xc6, 0xf6, 0x05, 0xf5, 0x36, 0x97, 0x46,
    0x97, 0xf6, 0xe6, 0x36, 0x44, 0x41, 0xc0, 0x00, 0xb9, 0x90, 0x0e, 0xc9,
    0x90, 0x30, 0x18, 0x62, 0x20, 0x1b, 0xf2, 0x21, 0x62, 0x40, 0x28, 0x2c,
    0x4d, 0xce, 0xc5, 0xae, 0x4c, 0x8e, 0xae, 0x0c, 0xef, 0x2b, 0xcd, 0x0d,
    0xae, 0x8e, 0x8e, 0x52, 0x58, 0x9a, 0x9c, 0x0b, 0xdb, 0xdb, 0x58, 0x18,
    0x5d, 0xda, 0x9b, 0xdb, 0x57, 0x9a, 0x1b, 0x59, 0x19, 0x1e, 0xb3, 0xb3,
    0x32, 0xb7, 0x32, 0xb9, 0x30, 0xba, 0x32, 0x32, 0x14, 0x1c, 0xb8, 0xb7,
    0xb9, 0x34, 0xba, 0xb4, 0x37, 0x37, 0x22, 0x3b, 0x99, 0x2f, 0xb3, 0x14,
    0x22, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0xa8, 0x64,
    0x40, 0xc8, 0x00, 0x29, 0x83, 0x64, 0x48, 0x04, 0xc4, 0x0c, 0x90, 0x0b,
    0xc1, 0x90, 0x0c, 0x39, 0x03, 0x6a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
    0x74, 0x65, 0x64, 0x28, 0x39, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72,
    0x64, 0x30, 0x44, 0x76, 0x32, 0x5f, 0x66, 0x29, 0x4c, 0xe8, 0xca, 0xf0,
    0xc6, 0xde, 0xde, 0xe4, 0xc8, 0x60, 0x86, 0x50, 0x89, 0x80, 0x90, 0x01,
    0x52, 0x06, 0x89, 0x90, 0x08, 0x48, 0x1a, 0x20, 0x17, 0x82, 0x21, 0x19,
    0xa2, 0x06, 0xbc, 0xce, 0xca, 0xdc, 0xca, 0xe4, 0xc2, 0xe8, 0xca, 0xc8,
    0x50, 0x6c, 0xc6, 0xde, 0xd8, 0xde, 0xe4, 0x60, 0x88, 0xec, 0x68, 0xbe,
    0xcc, 0x52, 0x68, 0x8c, 0xbd, 0xb1, 0xbd, 0xc9, 0xc1, 0x0c, 0xa1, 0x92,
    0x02, 0x21, 0x03, 0xa4, 0x0c, 0x92, 0x22, 0x11, 0x10, 0x36, 0x40, 0x2e,
    0xa4, 0x43, 0x32, 0xa4, 0x0d, 0xa8, 0x84, 0xa5, 0xc9, 0xb9, 0x88, 0xd5,
    0x99, 0x99, 0x95, 0xc9, 0xf1, 0x09, 0x4b, 0x93, 0x73, 0x11, 0xab, 0x33,
    0x33, 0x2b, 0x93, 0xfb, 0x9a, 0x4b, 0xd3, 0x2b, 0x23, 0x12, 0x96, 0x26,
    0xe7, 0x22, 0x57, 0x16, 0x46, 0x46, 0x2a, 0x2c, 0x4d, 0xce, 0x65, 0x8e,
    0x4e, 0xae, 0x6e, 0x8c, 0xee, 0x8b, 0x2e, 0x0f, 0xae, 0xec, 0x2b, 0xcd,
    0xcd, 0xec, 0x8d, 0x09, 0x59, 0xda, 0x1c, 0xdc, 0xd7, 0x5c, 0x9a, 0x5e,
    0xd9, 0x10, 0x25, 0x19, 0x12, 0x22, 0x19, 0x10, 0x0c, 0x99, 0x03, 0x46,
    0x61, 0x69, 0x72, 0x2e, 0x61, 0x72, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
    0x5f, 0x73, 0x69, 0x7a, 0x65, 0xbc, 0xc2, 0xd2, 0xe4, 0x5c, 0xc2, 0xe4,
    0xce, 0xbe, 0xe8, 0xf2, 0xe0, 0xca, 0xbe, 0xc2, 0xd8, 0xd2, 0xce, 0xdc,
    0xbe, 0xe6, 0xd2, 0xf4, 0xca, 0x98, 0xd8, 0xcd, 0x7d, 0xc1, 0x85, 0xc9,
    0x85, 0xb5, 0xcd, 0x71, 0xf8, 0x92, 0x99, 0x19, 0x42, 0x06, 0xc9, 0x81,
    0xbc, 0x01, 0x02, 0x07, 0x09, 0x81, 0x94, 0x41, 0x32, 0x24, 0x02, 0x12,
    0x07, 0x88, 0x1c, 0x20, 0x74, 0x80, 0xd4, 0x41, 0x42, 0x20, 0x76, 0x90,
    0x10, 0xc8, 0x85, 0xdc, 0x01, 0x92, 0x21, 0x78, 0x30, 0x04, 0x41, 0xd0,
    0x00, 0x59, 0x03, 0xc4, 0x0d, 0x90, 0x3c, 0x18, 0x62, 0x1c, 0x00, 0x32,
    0x06, 0x88, 0x1e, 0xf0, 0x79, 0x6b, 0x73, 0x4b, 0x83, 0x7b, 0xa3, 0x2b,
    0x73, 0xa3, 0x03, 0x19, 0x43, 0x0b, 0x93, 0xe3, 0x33, 0x95, 0xd6, 0x06,
    0xc7, 0x56, 0x06, 0x32, 0xb4, 0xb2, 0x02, 0x42, 0x25, 0x14, 0x14, 0x34,
    0x44, 0x40, 0xfa, 0x60, 0x88, 0x81, 0xf0, 0x01, 0xe2, 0x07, 0x4b, 0x30,
    0xc4, 0x40, 0xfe, 0x00, 0xf9, 0x83, 0x25, 0x18, 0x22, 0x00, 0xc9, 0x88,
    0x88, 0x1d, 0xd8, 0xc1, 0x1e, 0xda, 0xc1, 0x0d, 0xda, 0xe1, 0x1d, 0xc8,
    0xa1, 0x1e, 0xd8, 0xa1, 0x1c, 0xdc, 0xc0, 0x1c, 0xd8, 0x21, 0x1c, 0xce,
    0x61, 0x1e, 0xa6, 0x08, 0xc1, 0x30, 0x42, 0x61, 0x07, 0x76, 0xb0, 0x87,
    0x76, 0x70, 0x83, 0x74, 0x20, 0x87, 0x72, 0x70, 0x07, 0x7a, 0x98, 0x12,
    0x14, 0x23, 0x96, 0x70, 0x48, 0x07, 0x79, 0x70, 0x03, 0x7b, 0x28, 0x07,
    0x79, 0x98, 0x87, 0x74, 0x78, 0x07, 0x77, 0x98, 0x12, 0x18, 0x23, 0xa8,
    0x70, 0x48, 0x07, 0x79, 0x70, 0x03, 0x76, 0x08, 0x07, 0x77, 0x38, 0x87,
    0x7a, 0x08, 0x87, 0x73, 0x28, 0x87, 0x5f, 0xb0, 0x87, 0x72, 0x90, 0x87,
    0x79, 0x48, 0x87, 0x77, 0x70, 0x87, 0x29, 0x01, 0x32, 0x62, 0x0a, 0x87,
    0x74, 0x90, 0x07, 0x37, 0x18, 0x87, 0x77, 0x68, 0x07, 0x78, 0x48, 0x07,
    0x76, 0x28, 0x87, 0x5f, 0x78, 0x07, 0x78, 0xa0, 0x87, 0x74, 0x78, 0x07,
    0x77, 0x98, 0x87, 0x29, 0x86, 0xc2, 0x38, 0x90, 0x44, 0x8d, 0x50, 0xc2,
    0x21, 0x1d, 0xe4, 0xc1, 0x0d, 0xec, 0xa1, 0x1c, 0xe4, 0x81, 0x1e, 0xca,
    0x01, 0x1f, 0xa6, 0x04, 0x7b, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
    0x6d, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
    0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
    0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
    0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
    0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
    0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
    0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
    0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
    0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
    0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
    0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
    0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
    0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
    0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
    0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
    0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
    0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
    0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
    0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
    0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
    0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
    0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
    0xb0, 0xc3, 0x0c, 0xc7, 0x69, 0x87, 0x70, 0x58, 0x87, 0x72, 0x70, 0x83,
    0x74, 0x68, 0x07, 0x78, 0x60, 0x87, 0x74, 0x18, 0x87, 0x74, 0xa0, 0x87,
    0x19, 0xce, 0x53, 0x0f, 0xee, 0x00, 0x0f, 0xf2, 0x50, 0x0e, 0xe4, 0x90,
    0x0e, 0xe3, 0x40, 0x0f, 0xe1, 0x20, 0x0e, 0xec, 0x50, 0x0e, 0x33, 0x20,
    0x28, 0x1d, 0xdc, 0xc1, 0x1e, 0xc2, 0x41, 0x1e, 0xd2, 0x21, 0x1c, 0xdc,
    0x81, 0x1e, 0xdc, 0xe0, 0x1c, 0xe4, 0xe1, 0x1d, 0xea, 0x01, 0x1e, 0x66,
    0x18, 0x51, 0x38, 0xb0, 0x43, 0x3a, 0x9c, 0x83, 0x3b, 0xcc, 0x50, 0x24,
    0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x60, 0x87, 0x77, 0x78, 0x07,
    0x78, 0x98, 0x51, 0x4c, 0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x33, 0x1e,
    0x6a, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0x21, 0x1d, 0xde, 0xc1, 0x1d, 0x7e,
    0x01, 0x1e, 0xe4, 0xa1, 0x1c, 0xcc, 0x21, 0x1d, 0xf0, 0x61, 0x06, 0x54,
    0x85, 0x83, 0x38, 0xcc, 0xc3, 0x3b, 0xb0, 0x43, 0x3d, 0xd0, 0x43, 0x39,
    0xfc, 0xc2, 0x3c, 0xe4, 0x43, 0x3b, 0x88, 0xc3, 0x3b, 0xb0, 0xc3, 0x8c,
    0xc5, 0x0a, 0x87, 0x79, 0x98, 0x87, 0x77, 0x18, 0x87, 0x74, 0x08, 0x07,
    0x7a, 0x28, 0x07, 0x72, 0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x06, 0x50, 0x30, 0x00, 0xd2, 0xd0, 0x00, 0x00,
    0x61, 0x20, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c,
    0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0xd4, 0x63, 0x11, 0x40,
    0x60, 0x1c, 0x73, 0x10, 0x83, 0x00, 0x41, 0x94, 0x33, 0x00, 0x14, 0x63,
    0x09, 0x20, 0x08, 0x82, 0xf0, 0x2f, 0x80, 0x20, 0x08, 0xc2, 0xbf, 0x30,
    0x96, 0x00, 0x82, 0x20, 0x08, 0x82, 0x01, 0x08, 0x82, 0x20, 0x08, 0x0e,
    0x33, 0x00, 0x24, 0x73, 0x10, 0x18, 0x76, 0x59, 0x34, 0x33, 0x00, 0x04,
    0x63, 0x04, 0x20, 0x08, 0x82, 0xf8, 0x37, 0x46, 0x00, 0x82, 0x20, 0x08,
    0x7f, 0x33, 0x00, 0x00, 0xe3, 0x0d, 0x0c, 0x66, 0x51, 0x40, 0x2c, 0x0a,
    0xe8, 0x63, 0xc1, 0x02, 0x1f, 0x0b, 0x16, 0xf9, 0x0c, 0x32, 0x04, 0xcb,
    0x33, 0xc8, 0x10, 0x2c, 0xd1, 0x6c, 0xc3, 0x52, 0x01, 0xb3, 0x0d, 0x41,
    0x15, 0xcc, 0x36, 0x04, 0x83, 0x90, 0x41, 0x40, 0x0c, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x5b, 0x86, 0x20, 0x00, 0x85, 0x2d, 0x83, 0x30,
    0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
static const uint8_t yk___snk_fs_bytecode_metal_macos[2909] = {
    0x4d, 0x54, 0x4c, 0x42, 0x01, 0x80, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x5d, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0a, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x4e, 0x41, 0x4d, 0x45, 0x06, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x00,
    0x54, 0x59, 0x50, 0x45, 0x01, 0x00, 0x01, 0x48, 0x41, 0x53, 0x48, 0x20,
    0x00, 0x17, 0xe5, 0xa2, 0xb3, 0x7d, 0x00, 0xfc, 0xde, 0x00, 0x5f, 0xbd,
    0x79, 0x5e, 0xd5, 0x95, 0xff, 0xb6, 0xf4, 0xce, 0x41, 0x07, 0xfb, 0x8f,
    0x49, 0x6b, 0x95, 0x79, 0x7a, 0xd1, 0xcf, 0x19, 0xde, 0x4f, 0x46, 0x46,
    0x54, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x56, 0x45, 0x52, 0x53, 0x08, 0x00, 0x01, 0x00, 0x08,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x45, 0x4e, 0x44, 0x54, 0x45, 0x4e, 0x44,
    0x54, 0x04, 0x00, 0x00, 0x00, 0x45, 0x4e, 0x44, 0x54, 0x04, 0x00, 0x00,
    0x00, 0x45, 0x4e, 0x44, 0x54, 0xde, 0xc0, 0x17, 0x0b, 0x00, 0x00, 0x00,
    0x00, 0x14, 0x00, 0x00, 0x00, 0x60, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xff,
    0xff, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x95, 0x02, 0x00,
    0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
    0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32,
    0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b,
    0x62, 0x80, 0x14, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xa4, 0x10, 0x32,
    0x14, 0x38, 0x08, 0x18, 0x49, 0x0a, 0x32, 0x44, 0x24, 0x48, 0x0a, 0x90,
    0x21, 0x23, 0xc4, 0x52, 0x80, 0x0c, 0x19, 0x21, 0x72, 0x24, 0x07, 0xc8,
    0x48, 0x11, 0x62, 0xa8, 0xa0, 0xa8, 0x40, 0xc6, 0xf0, 0x01, 0x00, 0x00,
    0x00, 0x51, 0x18, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x1b, 0xcc, 0x25,
    0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x60, 0x00, 0x09, 0xa8, 0x88, 0x71,
    0x78, 0x07, 0x79, 0x90, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x60, 0x87, 0x7c,
    0x68, 0x03, 0x79, 0x78, 0x87, 0x7a, 0x70, 0x07, 0x72, 0x28, 0x07, 0x72,
    0x68, 0x03, 0x72, 0x48, 0x07, 0x7b, 0x48, 0x07, 0x72, 0x28, 0x87, 0x36,
    0x98, 0x87, 0x78, 0x90, 0x07, 0x7a, 0x68, 0x03, 0x73, 0x80, 0x87, 0x36,
    0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xcc, 0x21, 0x1c, 0xd8, 0x61,
    0x1e, 0xca, 0x01, 0x20, 0xc8, 0x21, 0x1d, 0xe6, 0x21, 0x1c, 0xc4, 0x81,
    0x1d, 0xca, 0xa1, 0x0d, 0xe8, 0x21, 0x1c, 0xd2, 0x81, 0x1d, 0xda, 0x60,
    0x1c, 0xc2, 0x81, 0x1d, 0xd8, 0x61, 0x1e, 0x00, 0x73, 0x08, 0x07, 0x76,
    0x98, 0x87, 0x72, 0x00, 0x08, 0x76, 0x28, 0x87, 0x79, 0x98, 0x87, 0x36,
    0x80, 0x07, 0x79, 0x28, 0x87, 0x71, 0x48, 0x87, 0x79, 0x28, 0x87, 0x36,
    0x30, 0x07, 0x78, 0x68, 0x87, 0x70, 0x20, 0x07, 0xc0, 0x1c, 0xc2, 0x81,
    0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xcc, 0x41,
    0x1e, 0xc2, 0xa1, 0x1d, 0xca, 0xa1, 0x0d, 0xe0, 0xe1, 0x1d, 0xd2, 0xc1,
    0x1d, 0xe8, 0xa1, 0x1c, 0xe4, 0xa1, 0x0d, 0xca, 0x81, 0x1d, 0xd2, 0xa1,
    0x1d, 0x00, 0x7a, 0x90, 0x87, 0x7a, 0x28, 0x07, 0x60, 0x70, 0x87, 0x77,
    0x68, 0x03, 0x73, 0x90, 0x87, 0x70, 0x68, 0x87, 0x72, 0x68, 0x03, 0x78,
    0x78, 0x87, 0x74, 0x70, 0x07, 0x7a, 0x28, 0x07, 0x79, 0x68, 0x83, 0x72,
    0x60, 0x87, 0x74, 0x68, 0x87, 0x36, 0x70, 0x87, 0x77, 0x70, 0x87, 0x36,
    0x60, 0x87, 0x72, 0x08, 0x07, 0x73, 0x00, 0x08, 0x77, 0x78, 0x87, 0x36,
    0x48, 0x07, 0x77, 0x30, 0x87, 0x79, 0x68, 0x03, 0x73, 0x80, 0x87, 0x36,
    0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xe8, 0x41, 0x1e, 0xea, 0xa1,
    0x1c, 0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xd4, 0xa1, 0x1e, 0xda, 0x01,
    0x1e, 0xda, 0x80, 0x1e, 0xc2, 0x41, 0x1c, 0xd8, 0xa1, 0x1c, 0xe6, 0x01,
    0x30, 0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x70, 0x87, 0x77,
    0x68, 0x03, 0x77, 0x08, 0x07, 0x77, 0x98, 0x87, 0x36, 0x30, 0x07, 0x78,
    0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0x80, 0x1e, 0xe4, 0xa1,
    0x1e, 0xca, 0x01, 0x20, 0xdc, 0xe1, 0x1d, 0xda, 0x60, 0x1e, 0xd2, 0xe1,
    0x1c, 0xdc, 0xa1, 0x1c, 0xc8, 0xa1, 0x0d, 0xf4, 0xa1, 0x1c, 0xe4, 0xe1,
    0x1d, 0xe6, 0xa1, 0x0d, 0xcc, 0x01, 0x1e, 0xda, 0xa0, 0x1d, 0xc2, 0x81,
    0x1e, 0xd0, 0x01, 0xa0, 0x07, 0x79, 0xa8, 0x87, 0x72, 0x00, 0x08, 0x77,
    0x78, 0x87, 0x36, 0xa0, 0x07, 0x79, 0x08, 0x07, 0x78, 0x80, 0x87, 0x74,
    0x70, 0x87, 0x73, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0x80,
    0x1e, 0xe4, 0xa1, 0x1e, 0xca, 0x01, 0x20, 0xe6, 0x81, 0x1e, 0xc2, 0x61,
    0x1c, 0xd6, 0xa1, 0x0d, 0xe0, 0x41, 0x1e, 0xde, 0x81, 0x1e, 0xca, 0x61,
    0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0xa1, 0x0d, 0xc4, 0xa1, 0x1e, 0xcc, 0xc1,
    0x1c, 0xca, 0x41, 0x1e, 0xda, 0x60, 0x1e, 0xd2, 0x41, 0x1f, 0xca, 0x01,
    0xc0, 0x03, 0x80, 0xa8, 0x07, 0x77, 0x98, 0x87, 0x70, 0x30, 0x87, 0x72,
    0x68, 0x03, 0x73, 0x80, 0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74,
    0x00, 0xe8, 0x41, 0x1e, 0xea, 0xa1, 0x1c, 0x00, 0xa2, 0x1e, 0xe6, 0xa1,
    0x1c, 0xda, 0x60, 0x1e, 0xde, 0xc1, 0x1c, 0xe8, 0xa1, 0x0d, 0xcc, 0x81,
    0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87, 0x79,
    0x28, 0x07, 0x60, 0x83, 0x21, 0x0c, 0xc0, 0x02, 0x54, 0x1b, 0x8c, 0x81,
    0x00, 0x16, 0xa0, 0xda, 0x80, 0x10, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00,
    0x0c, 0x20, 0x01, 0xd5, 0x06, 0xa3, 0x08, 0x80, 0x05, 0xa8, 0x36, 0x18,
    0x86, 0x00, 0x2c, 0x40, 0x05, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00,
    0x00, 0x13, 0x86, 0x40, 0x18, 0x26, 0x0c, 0x44, 0x61, 0x00, 0x00, 0x00,
    0x00, 0x89, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x32, 0x22, 0x48,
    0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x22, 0xa4, 0x84, 0x04, 0x93, 0x22,
    0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8a, 0x8c, 0x0b, 0x84, 0xa4,
    0x4c, 0x10, 0x48, 0x33, 0x00, 0xc3, 0x08, 0x04, 0x70, 0x90, 0x34, 0x45,
    0x94, 0x30, 0xf9, 0x0c, 0x80, 0x34, 0xf4, 0xef, 0x50, 0x13, 0x0a, 0xc2,
    0x30, 0x82, 0x00, 0x1c, 0x25, 0x4d, 0x11, 0x25, 0x4c, 0xfe, 0x3f, 0x11,
    0xd7, 0x44, 0x45, 0xc4, 0x6f, 0x0f, 0xff, 0x34, 0x46, 0x00, 0x0c, 0x22,
    0x10, 0xc1, 0x45, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xff, 0x12, 0xc0, 0x3c,
    0x0b, 0x11, 0xfd, 0xd3, 0x18, 0x01, 0x30, 0x88, 0x60, 0x08, 0xa5, 0x10,
    0x23, 0x94, 0x43, 0x68, 0x8e, 0x20, 0x98, 0x23, 0x00, 0x83, 0x61, 0x04,
    0x61, 0x29, 0x48, 0x28, 0x67, 0x28, 0xa6, 0x00, 0xb5, 0x81, 0x80, 0x1c,
    0x58, 0x23, 0x00, 0x00, 0x00, 0x13, 0xb2, 0x70, 0x48, 0x07, 0x79, 0xb0,
    0x03, 0x3a, 0x68, 0x83, 0x70, 0x80, 0x07, 0x78, 0x60, 0x87, 0x72, 0x68,
    0x83, 0x76, 0x08, 0x87, 0x71, 0x78, 0x87, 0x79, 0xc0, 0x87, 0x38, 0x80,
    0x03, 0x37, 0x88, 0x83, 0x38, 0x70, 0x03, 0x38, 0xd8, 0x70, 0x1b, 0xe5,
    0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
    0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x78,
    0xa0, 0x07, 0x78, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x80, 0x07, 0x7a,
    0x80, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x10, 0x07, 0x76,
    0xa0, 0x07, 0x71, 0x60, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
    0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76,
    0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d,
    0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
    0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
    0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0f, 0x71, 0x60, 0x07, 0x7a,
    0x10, 0x07, 0x76, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x6d, 0x60, 0x0f, 0x72,
    0x40, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
    0x60, 0x0f, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
    0x20, 0x07, 0x6d, 0x60, 0x0f, 0x74, 0x80, 0x07, 0x7a, 0x60, 0x07, 0x74,
    0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0f, 0x76, 0x40, 0x07, 0x7a,
    0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0f, 0x79,
    0x60, 0x07, 0x7a, 0x10, 0x07, 0x72, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x72,
    0x80, 0x07, 0x6d, 0x60, 0x0f, 0x71, 0x20, 0x07, 0x78, 0xa0, 0x07, 0x71,
    0x20, 0x07, 0x78, 0xa0, 0x07, 0x71, 0x20, 0x07, 0x78, 0xd0, 0x06, 0xf6,
    0x10, 0x07, 0x79, 0x20, 0x07, 0x7a, 0x20, 0x07, 0x75, 0x60, 0x07, 0x7a,
    0x20, 0x07, 0x75, 0x60, 0x07, 0x6d, 0x60, 0x0f, 0x72, 0x50, 0x07, 0x76,
    0xa0, 0x07, 0x72, 0x50, 0x07, 0x76, 0xa0, 0x07, 0x72, 0x50, 0x07, 0x76,
    0xd0, 0x06, 0xf6, 0x50, 0x07, 0x71, 0x20, 0x07, 0x7a, 0x50, 0x07, 0x71,
    0x20, 0x07, 0x7a, 0x50, 0x07, 0x71, 0x20, 0x07, 0x6d, 0x60, 0x0f, 0x71,
    0x00, 0x07, 0x72, 0x40, 0x07, 0x7a, 0x10, 0x07, 0x70, 0x20, 0x07, 0x74,
    0xa0, 0x07, 0x71, 0x00, 0x07, 0x72, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
    0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0x30, 0x84, 0x49,
    0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xc2, 0x38, 0x40,
    0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x10, 0x19, 0x11, 0x4c,
    0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x5a, 0x25, 0x30, 0x02,
    0x50, 0x04, 0x85, 0x50, 0x10, 0x65, 0x40, 0x70, 0xac, 0x41, 0x79, 0x08,
    0x00, 0x79, 0x18, 0x00, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c,
    0x10, 0x97, 0x29, 0xa2, 0x25, 0x10, 0xab, 0x32, 0xb9, 0xb9, 0xb4, 0x37,
    0xb7, 0x21, 0xc6, 0x42, 0x3c, 0x00, 0x84, 0x50, 0xb9, 0x1b, 0x43, 0x0b,
    0x93, 0xfb, 0x9a, 0x4b, 0xd3, 0x2b, 0x1b, 0x62, 0x2c, 0xc2, 0x23, 0x2c,
    0x05, 0xd9, 0x20, 0x08, 0x0e, 0x8e, 0xad, 0x0c, 0x84, 0x89, 0xc9, 0xaa,
    0x09, 0xc4, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x0d, 0x24, 0x07, 0x46,
    0xc6, 0x25, 0x86, 0x06, 0x04, 0xa5, 0xad, 0x8c, 0x2e, 0x8c, 0xcd, 0xac,
    0xac, 0x25, 0x07, 0x46, 0xc6, 0x25, 0x86, 0xc6, 0x25, 0x27, 0x65, 0x88,
    0xf0, 0x10, 0x43, 0x8c, 0x45, 0x58, 0x8c, 0x65, 0x60, 0xd1, 0x54, 0x46,
    0x17, 0xc6, 0x36, 0x04, 0x79, 0x8e, 0x45, 0x58, 0x84, 0x65, 0xe0, 0x16,
    0x96, 0x26, 0xe7, 0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56, 0xe6, 0x42,
    0x56, 0xe6, 0xf6, 0x26, 0xd7, 0x36, 0xf7, 0x45, 0x96, 0x36, 0x17, 0x26,
    0xc6, 0x56, 0x36, 0x44, 0x78, 0x12, 0x72, 0x61, 0x69, 0x72, 0x2e, 0x63,
    0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x5f,
    0x6d, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43,
    0x84, 0x67, 0x61, 0x19, 0x84, 0xa5, 0xc9, 0xb9, 0x8c, 0xbd, 0xb5, 0xc1,
    0xa5, 0xb1, 0x95, 0xb9, 0x98, 0xc9, 0x85, 0xb5, 0x95, 0x89, 0xd5, 0x99,
    0x99, 0x95, 0xc9, 0x7d, 0x99, 0x95, 0xd1, 0x8d, 0xa1, 0x7d, 0x91, 0xa5,
    0xcd, 0x85, 0x89, 0xb1, 0x95, 0x0d, 0x11, 0x9e, 0x86, 0x61, 0x10, 0x96,
    0x26, 0xe7, 0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56, 0xe6, 0xe2, 0x16,
    0x46, 0x97, 0x66, 0x57, 0xf6, 0x45, 0xf6, 0x56, 0x27, 0xc6, 0x56, 0xf6,
    0x45, 0x96, 0x36, 0x17, 0x26, 0xc6, 0x56, 0x36, 0x44, 0x78, 0x1e, 0x92,
    0x41, 0x58, 0x9a, 0x9c, 0xcb, 0xd8, 0x5b, 0x1b, 0x5c, 0x1a, 0x5b, 0x99,
    0x8b, 0x5b, 0x18, 0x5d, 0x9a, 0x5d, 0xd9, 0x17, 0xdb, 0x9b, 0xdb, 0xd9,
    0x17, 0xdb, 0x9b, 0xdb, 0xd9, 0x17, 0x59, 0xda, 0x5c, 0x98, 0x18, 0x5b,
    0xd9, 0x10, 0xe1, 0x89, 0x78, 0x06, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f,
    0x6d, 0x70, 0x69, 0x6c, 0x65, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
    0x5f, 0x77, 0x69, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
    0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x84, 0x67,
    0x62, 0x14, 0x96, 0x26, 0xe7, 0x22, 0x57, 0xe6, 0x46, 0x56, 0x26, 0xf7,
    0x45, 0x17, 0x26, 0x77, 0x56, 0x46, 0xc7, 0x28, 0x2c, 0x4d, 0xce, 0x25,
    0x4c, 0xee, 0xec, 0x8b, 0x2e, 0x0f, 0xae, 0xec, 0xcb, 0x2d, 0xac, 0xad,
    0x8c, 0x86, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x0d, 0x99, 0xb0, 0x34, 0x39,
    0x97, 0x30, 0xb9, 0xb3, 0x2f, 0xb7, 0xb0, 0xb6, 0x32, 0x2a, 0x66, 0x72,
    0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x98, 0xa7, 0x5a,
    0x86, 0xc7, 0x7a, 0xae, 0x07, 0x7b, 0xb2, 0x21, 0xc2, 0xa3, 0x51, 0x0a,
    0x4b, 0x93, 0x73, 0x31, 0x93, 0x0b, 0x3b, 0x6b, 0x2b, 0x73, 0xa3, 0xfb,
    0x4a, 0x73, 0x83, 0xab, 0xa3, 0xe3, 0x52, 0x37, 0x57, 0x26, 0x87, 0xc2,
    0xf6, 0x36, 0xe6, 0x06, 0x93, 0x42, 0x25, 0x2c, 0x4d, 0xce, 0x65, 0xac,
    0xcc, 0x8d, 0xae, 0x4c, 0x8e, 0x4f, 0x58, 0x9a, 0x9c, 0x0b, 0x5c, 0x99,
    0xdc, 0x1c, 0x5c, 0xd9, 0x18, 0x5d, 0x9a, 0x5d, 0x19, 0x0d, 0x33, 0xb6,
    0xb7, 0x30, 0x3a, 0x19, 0x0a, 0x75, 0x76, 0x43, 0xa4, 0x65, 0x78, 0xb8,
    0xa7, 0x7b, 0xbc, 0xe7, 0x7b, 0xac, 0x07, 0x0c, 0x1e, 0xec, 0x09, 0x03,
    0x2e, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29,
    0x2c, 0xc6, 0xde, 0xd8, 0xde, 0xe4, 0x86, 0x48, 0x8b, 0xf0, 0x70, 0xcf,
    0x18, 0x3c, 0xde, 0xf3, 0x3d, 0xd6, 0x73, 0x3d, 0xd8, 0x43, 0x06, 0x5c,
    0xc2, 0xd2, 0xe4, 0x5c, 0xe8, 0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca, 0x28,
    0x85, 0xa5, 0xc9, 0xb9, 0xb0, 0xbd, 0x8d, 0x85, 0xd1, 0xa5, 0xbd, 0xb9,
    0x7d, 0xa5, 0xb9, 0x91, 0x95, 0xe1, 0x51, 0x09, 0x4b, 0x93, 0x73, 0x99,
    0x0b, 0x6b, 0x83, 0x63, 0x2b, 0x23, 0x46, 0x57, 0x86, 0x47, 0x57, 0x27,
    0x57, 0x26, 0x43, 0xc6, 0x63, 0xc6, 0xf6, 0x16, 0x46, 0xc7, 0x02, 0x32,
    0x17, 0xd6, 0x06, 0xc7, 0x56, 0xe6, 0xc3, 0x81, 0xae, 0x0c, 0x6f, 0x08,
    0xb5, 0x10, 0x8f, 0x19, 0x3c, 0x67, 0xb0, 0x0c, 0x8b, 0xf0, 0xa0, 0xc1,
    0x63, 0x3d, 0x69, 0xf0, 0x60, 0x8f, 0x1a, 0x70, 0x09, 0x4b, 0x93, 0x73,
    0x99, 0x0b, 0x6b, 0x83, 0x63, 0x2b, 0x93, 0xe3, 0x31, 0x17, 0xd6, 0x06,
    0xc7, 0x56, 0x26, 0x47, 0x84, 0xae, 0x0c, 0x6f, 0xaa, 0x0d, 0x8e, 0x4d,
    0x6e, 0x88, 0xb4, 0x1c, 0x0f, 0x1b, 0x3c, 0x67, 0xb0, 0x0c, 0x8b, 0xf0,
    0x58, 0x4f, 0x1b, 0x3c, 0xd8, 0xe3, 0x06, 0x43, 0x90, 0x47, 0x0c, 0x9e,
    0x32, 0x78, 0xd6, 0xe0, 0x79, 0x83, 0x21, 0x46, 0x02, 0x3c, 0xdb, 0x03,
    0x07, 0x23, 0x22, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
    0x77, 0x20, 0x87, 0x7a, 0x60, 0x87, 0x72, 0x70, 0x03, 0x73, 0x60, 0x87,
    0x70, 0x38, 0x87, 0x79, 0x98, 0x22, 0x04, 0xc3, 0x08, 0x85, 0x1d, 0xd8,
    0xc1, 0x1e, 0xda, 0xc1, 0x0d, 0xd2, 0x81, 0x1c, 0xca, 0xc1, 0x1d, 0xe8,
    0x61, 0x4a, 0x50, 0x8c, 0x58, 0xc2, 0x21, 0x1d, 0xe4, 0xc1, 0x0d, 0xec,
    0xa1, 0x1c, 0xe4, 0x61, 0x1e, 0xd2, 0xe1, 0x1d, 0xdc, 0x61, 0x4a, 0x60,
    0x8c, 0xa0, 0xc2, 0x21, 0x1d, 0xe4, 0xc1, 0x0d, 0xd8, 0x21, 0x1c, 0xdc,
    0xe1, 0x1c, 0xea, 0x21, 0x1c, 0xce, 0xa1, 0x1c, 0x7e, 0xc1, 0x1e, 0xca,
    0x41, 0x1e, 0xe6, 0x21, 0x1d, 0xde, 0xc1, 0x1d, 0xa6, 0x04, 0xc8, 0x88,
    0x29, 0x1c, 0xd2, 0x41, 0x1e, 0xdc, 0x60, 0x1c, 0xde, 0xa1, 0x1d, 0xe0,
    0x21, 0x1d, 0xd8, 0xa1, 0x1c, 0x7e, 0xe1, 0x1d, 0xe0, 0x81, 0x1e, 0xd2,
    0xe1, 0x1d, 0xdc, 0x61, 0x1e, 0xa6, 0x18, 0x0a, 0xe3, 0x40, 0x12, 0x35,
    0x82, 0x09, 0x87, 0x74, 0x90, 0x07, 0x37, 0x30, 0x07, 0x79, 0x08, 0x87,
    0x73, 0x68, 0x87, 0x72, 0x70, 0x07, 0x7a, 0x98, 0x12, 0xc4, 0x01, 0x00,
    0x00, 0x79, 0x18, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80,
    0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84,
    0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c,
    0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42,
    0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88,
    0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c,
    0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79,
    0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70,
    0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f,
    0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4,
    0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30,
    0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc,
    0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b,
    0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70,
    0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76,
    0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72,
    0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e,
    0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1,
    0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21,
    0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8,
    0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94,
    0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc,
    0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc7, 0x69, 0x87, 0x70,
    0x58, 0x87, 0x72, 0x70, 0x83, 0x74, 0x68, 0x07, 0x78, 0x60, 0x87, 0x74,
    0x18, 0x87, 0x74, 0xa0, 0x87, 0x19, 0xce, 0x53, 0x0f, 0xee, 0x00, 0x0f,
    0xf2, 0x50, 0x0e, 0xe4, 0x90, 0x0e, 0xe3, 0x40, 0x0f, 0xe1, 0x20, 0x0e,
    0xec, 0x50, 0x0e, 0x33, 0x20, 0x28, 0x1d, 0xdc, 0xc1, 0x1e, 0xc2, 0x41,
    0x1e, 0xd2, 0x21, 0x1c, 0xdc, 0x81, 0x1e, 0xdc, 0xe0, 0x1c, 0xe4, 0xe1,
    0x1d, 0xea, 0x01, 0x1e, 0x66, 0x18, 0x51, 0x38, 0xb0, 0x43, 0x3a, 0x9c,
    0x83, 0x3b, 0xcc, 0x50, 0x24, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37,
    0x60, 0x87, 0x77, 0x78, 0x07, 0x78, 0x98, 0x51, 0x4c, 0xf4, 0x90, 0x0f,
    0xf0, 0x50, 0x0e, 0x33, 0x1e, 0x6a, 0x1e, 0xca, 0x61, 0x1c, 0xe8, 0x21,
    0x1d, 0xde, 0xc1, 0x1d, 0x7e, 0x01, 0x1e, 0xe4, 0xa1, 0x1c, 0xcc, 0x21,
    0x1d, 0xf0, 0x61, 0x06, 0x54, 0x85, 0x83, 0x38, 0xcc, 0xc3, 0x3b, 0xb0,
    0x43, 0x3d, 0xd0, 0x43, 0x39, 0xfc, 0xc2, 0x3c, 0xe4, 0x43, 0x3b, 0x88,
    0xc3, 0x3b, 0xb0, 0xc3, 0x8c, 0xc5, 0x0a, 0x87, 0x79, 0x98, 0x87, 0x77,
    0x18, 0x87, 0x74, 0x08, 0x07, 0x7a, 0x28, 0x07, 0x72, 0x00, 0x00, 0x00,
    0x00, 0x71, 0x20, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x16, 0xb0, 0x01,
    0x48, 0xe4, 0x4b, 0x00, 0xf3, 0x2c, 0xc4, 0x3f, 0x11, 0xd7, 0x44, 0x45,
    0xc4, 0x6f, 0x0f, 0x7e, 0x85, 0x17, 0xb7, 0x6d, 0x00, 0x05, 0x03, 0x20,
    0x0d, 0x0d, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x0c, 0x00, 0x00,
    0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0xc4, 0x46, 0x00, 0x48, 0x8d, 0x00, 0xd4, 0x00, 0x89, 0x19, 0x00,
    0x02, 0x23, 0x00, 0x00, 0x00, 0x23, 0x06, 0x8a, 0x10, 0x44, 0x87, 0x91,
    0x0c, 0x05, 0x11, 0x58, 0x90, 0xc8, 0x67, 0xb6, 0x81, 0x08, 0x80, 0x0c,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00,
};
static const uint8_t yk___snk_vs_bytecode_metal_ios[3200] = {
    0x4d, 0x54, 0x4c, 0x42, 0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x0b, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x4e, 0x41, 0x4d, 0x45, 0x06, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x00,
    0x54, 0x59, 0x50, 0x45, 0x01, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x20,
    0x00, 0xcb, 0xdd, 0xe3, 0x08, 0x7a, 0x87, 0xef, 0xdd, 0xe0, 0x68, 0xe7,
    0xe8, 0x6b, 0xe6, 0xea, 0x8b, 0x6d, 0x4a, 0xe0, 0x3d, 0x6a, 0xfe, 0xe4,
    0xfe, 0x32, 0x1d, 0xbe, 0xb6, 0x10, 0x11, 0xee, 0x75, 0x4f, 0x46, 0x46,
    0x54, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x56, 0x45, 0x52, 0x53, 0x08, 0x00, 0x01, 0x00, 0x08,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x4e, 0x44, 0x54, 0x45, 0x4e, 0x44,
    0x54, 0x37, 0x00, 0x00, 0x00, 0x56, 0x41, 0x54, 0x54, 0x22, 0x00, 0x03,
    0x00, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x80,
    0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x00, 0x01, 0x80,
    0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x02, 0x80, 0x56, 0x41, 0x54,
    0x59, 0x05, 0x00, 0x03, 0x00, 0x04, 0x04, 0x06, 0x45, 0x4e, 0x44, 0x54,
    0x04, 0x00, 0x00, 0x00, 0x45, 0x4e, 0x44, 0x54, 0xde, 0xc0, 0x17, 0x0b,
    0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x5c, 0x0b, 0x00, 0x00,
    0xff, 0xff, 0xff, 0xff, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
    0xd4, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x12, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
    0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
    0x1e, 0x04, 0x8b, 0x62, 0x80, 0x10, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
    0x84, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x49, 0x0a, 0x32, 0x44, 0x24,
    0x48, 0x0a, 0x90, 0x21, 0x23, 0xc4, 0x52, 0x80, 0x0c, 0x19, 0x21, 0x72,
    0x24, 0x07, 0xc8, 0x08, 0x11, 0x62, 0xa8, 0xa0, 0xa8, 0x40, 0xc6, 0xf0,
    0x01, 0x00, 0x00, 0x00, 0x51, 0x18, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00,
    0x1b, 0xc8, 0x25, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x80, 0x8a,
    0x18, 0x87, 0x77, 0x90, 0x07, 0x79, 0x28, 0x87, 0x71, 0xa0, 0x07, 0x76,
    0xc8, 0x87, 0x36, 0x90, 0x87, 0x77, 0xa8, 0x07, 0x77, 0x20, 0x87, 0x72,
    0x20, 0x87, 0x36, 0x20, 0x87, 0x74, 0xb0, 0x87, 0x74, 0x20, 0x87, 0x72,
    0x68, 0x83, 0x79, 0x88, 0x07, 0x79, 0xa0, 0x87, 0x36, 0x30, 0x07, 0x78,
    0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0xc0, 0x1c, 0xc2, 0x81,
    0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0x82, 0x1c, 0xd2, 0x61, 0x1e, 0xc2, 0x41,
    0x1c, 0xd8, 0xa1, 0x1c, 0xda, 0x80, 0x1e, 0xc2, 0x21, 0x1d, 0xd8, 0xa1,
    0x0d, 0xc6, 0x21, 0x1c, 0xd8, 0x81, 0x1d, 0xe6, 0x01, 0x30, 0x87, 0x70,
    0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x60, 0x87, 0x72, 0x98, 0x87, 0x79,
    0x68, 0x03, 0x78, 0x90, 0x87, 0x72, 0x18, 0x87, 0x74, 0x98, 0x87, 0x72,
    0x68, 0x03, 0x73, 0x80, 0x87, 0x76, 0x08, 0x07, 0x72, 0x00, 0xcc, 0x21,
    0x1c, 0xd8, 0x61, 0x1e, 0xca, 0x01, 0x20, 0xdc, 0xe1, 0x1d, 0xda, 0xc0,
    0x1c, 0xe4, 0x21, 0x1c, 0xda, 0xa1, 0x1c, 0xda, 0x00, 0x1e, 0xde, 0x21,
    0x1d, 0xdc, 0x81, 0x1e, 0xca, 0x41, 0x1e, 0xda, 0xa0, 0x1c, 0xd8, 0x21,
    0x1d, 0xda, 0x01, 0xa0, 0x07, 0x79, 0xa8, 0x87, 0x72, 0x00, 0x06, 0x77,
    0x78, 0x87, 0x36, 0x30, 0x07, 0x79, 0x08, 0x87, 0x76, 0x28, 0x87, 0x36,
    0x80, 0x87, 0x77, 0x48, 0x07, 0x77, 0xa0, 0x87, 0x72, 0x90, 0x87, 0x36,
    0x28, 0x07, 0x76, 0x48, 0x87, 0x76, 0x68, 0x03, 0x77, 0x78, 0x07, 0x77,
    0x68, 0x03, 0x76, 0x28, 0x87, 0x70, 0x30, 0x07, 0x80, 0x70, 0x87, 0x77,
    0x68, 0x83, 0x74, 0x70, 0x07, 0x73, 0x98, 0x87, 0x36, 0x30, 0x07, 0x78,
    0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0x80, 0x1e, 0xe4, 0xa1,
    0x1e, 0xca, 0x01, 0x20, 0xdc, 0xe1, 0x1d, 0xda, 0x40, 0x1d, 0xea, 0xa1,
    0x1d, 0xe0, 0xa1, 0x0d, 0xe8, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61,
    0x1e, 0x00, 0x73, 0x08, 0x07, 0x76, 0x98, 0x87, 0x72, 0x00, 0x08, 0x77,
    0x78, 0x87, 0x36, 0x70, 0x87, 0x70, 0x70, 0x87, 0x79, 0x68, 0x03, 0x73,
    0x80, 0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xe8, 0x41,
    0x1e, 0xea, 0xa1, 0x1c, 0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xe6, 0x21,
    0x1d, 0xce, 0xc1, 0x1d, 0xca, 0x81, 0x1c, 0xda, 0x40, 0x1f, 0xca, 0x41,
    0x1e, 0xde, 0x61, 0x1e, 0xda, 0xc0, 0x1c, 0xe0, 0xa1, 0x0d, 0xda, 0x21,
    0x1c, 0xe8, 0x01, 0x1d, 0x00, 0x7a, 0x90, 0x87, 0x7a, 0x28, 0x07, 0x80,
    0x70, 0x87, 0x77, 0x68, 0x03, 0x7a, 0x90, 0x87, 0x70, 0x80, 0x07, 0x78,
    0x48, 0x07, 0x77, 0x38, 0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74,
    0x00, 0xe8, 0x41, 0x1e, 0xea, 0xa1, 0x1c, 0x00, 0x62, 0x1e, 0xe8, 0x21,
    0x1c, 0xc6, 0x61, 0x1d, 0xda, 0x00, 0x1e, 0xe4, 0xe1, 0x1d, 0xe8, 0xa1,
    0x1c, 0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xda, 0x40, 0x1c, 0xea, 0xc1,
    0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x0d, 0xe6, 0x21, 0x1d, 0xf4, 0xa1,
    0x1c, 0x00, 0x3c, 0x00, 0x88, 0x7a, 0x70, 0x87, 0x79, 0x08, 0x07, 0x73,
    0x28, 0x87, 0x36, 0x30, 0x07, 0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a,
    0x40, 0x07, 0x80, 0x1e, 0xe4, 0xa1, 0x1e, 0xca, 0x01, 0x20, 0xea, 0x61,
    0x1e, 0xca, 0xa1, 0x0d, 0xe6, 0xe1, 0x1d, 0xcc, 0x81, 0x1e, 0xda, 0xc0,
    0x1c, 0xd8, 0xe1, 0x1d, 0xc2, 0x81, 0x1e, 0x00, 0x73, 0x08, 0x07, 0x76,
    0x98, 0x87, 0x72, 0x00, 0x36, 0x20, 0x02, 0x01, 0x24, 0xc0, 0x02, 0x54,
    0x00, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x13, 0x84, 0x40, 0x00, 0x89, 0x20, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00,
    0x32, 0x22, 0x08, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x22, 0xa4, 0x84,
    0x04, 0x13, 0x22, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x88, 0x8c,
    0x0b, 0x84, 0x84, 0x4c, 0x10, 0x3c, 0x33, 0x00, 0xc3, 0x08, 0x02, 0x30,
    0x8c, 0x40, 0x00, 0x77, 0x49, 0x53, 0x44, 0x09, 0x93, 0xcf, 0x00, 0x48,
    0x43, 0xff, 0x0e, 0x35, 0xf9, 0x0f, 0x20, 0x28, 0xc4, 0x80, 0x87, 0x10,
    0x39, 0x48, 0x9a, 0x22, 0x4a, 0x98, 0xfc, 0x4a, 0xfa, 0x1f, 0x20, 0x02,
    0x18, 0x09, 0x05, 0x31, 0x88, 0x40, 0x08, 0xa5, 0x98, 0x08, 0x29, 0xb2,
    0x81, 0x80, 0x39, 0x02, 0x30, 0x48, 0x81, 0x9c, 0x23, 0x00, 0x85, 0x41,
    0x84, 0x40, 0x18, 0x46, 0x20, 0x92, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x13, 0xa8, 0x70, 0x48, 0x07, 0x79, 0xb0, 0x03, 0x3a, 0x68, 0x83, 0x70,
    0x80, 0x07, 0x78, 0x60, 0x87, 0x72, 0x68, 0x83, 0x74, 0x78, 0x87, 0x79,
    0xc8, 0x03, 0x37, 0x80, 0x03, 0x37, 0x80, 0x83, 0x0d, 0xb7, 0x51, 0x0e,
    0x6d, 0x00, 0x0f, 0x7a, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
    0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x80, 0x07,
    0x7a, 0x80, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x78, 0xa0, 0x07,
    0x78, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x71, 0x60, 0x07,
    0x7a, 0x10, 0x07, 0x76, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07,
    0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07,
    0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06,
    0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
    0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
    0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xf6, 0x10, 0x07, 0x76, 0xa0, 0x07,
    0x71, 0x60, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xd0, 0x06, 0xf6, 0x20, 0x07,
    0x74, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06,
    0xf6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
    0x72, 0xd0, 0x06, 0xf6, 0x40, 0x07, 0x78, 0xa0, 0x07, 0x76, 0x40, 0x07,
    0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xf6, 0x60, 0x07, 0x74, 0xa0, 0x07,
    0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xf6, 0x90, 0x07,
    0x76, 0xa0, 0x07, 0x71, 0x20, 0x07, 0x78, 0xa0, 0x07, 0x71, 0x20, 0x07,
    0x78, 0xd0, 0x06, 0xf6, 0x10, 0x07, 0x72, 0x80, 0x07, 0x7a, 0x10, 0x07,
    0x72, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x72, 0x80, 0x07, 0x6d, 0x60, 0x0f,
    0x71, 0x90, 0x07, 0x72, 0xa0, 0x07, 0x72, 0x50, 0x07, 0x76, 0xa0, 0x07,
    0x72, 0x50, 0x07, 0x76, 0xd0, 0x06, 0xf6, 0x20, 0x07, 0x75, 0x60, 0x07,
    0x7a, 0x20, 0x07, 0x75, 0x60, 0x07, 0x7a, 0x20, 0x07, 0x75, 0x60, 0x07,
    0x6d, 0x60, 0x0f, 0x75, 0x10, 0x07, 0x72, 0xa0, 0x07, 0x75, 0x10, 0x07,
    0x72, 0xa0, 0x07, 0x75, 0x10, 0x07, 0x72, 0xd0, 0x06, 0xf6, 0x10, 0x07,
    0x70, 0x20, 0x07, 0x74, 0xa0, 0x07, 0x71, 0x00, 0x07, 0x72, 0x40, 0x07,
    0x7a, 0x10, 0x07, 0x70, 0x20, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07,
    0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x43, 0x98, 0x03,
    0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10, 0x00, 0x00,
    0x0b, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x10, 0x19, 0x11, 0x4c, 0x90,
    0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xda, 0x11, 0x00, 0xca, 0x12,
    0x18, 0x01, 0x28, 0x88, 0x22, 0x28, 0x84, 0x32, 0x20, 0x1d, 0x4b, 0x68,
    0x0a, 0x82, 0x31, 0x02, 0x10, 0x04, 0x41, 0x11, 0x0c, 0x00, 0x00, 0x00,
    0x79, 0x18, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x10,
    0x97, 0x29, 0xa2, 0x25, 0x10, 0xab, 0x32, 0xb9, 0xb9, 0xb4, 0x37, 0xb7,
    0x21, 0x46, 0x52, 0x20, 0x80, 0x82, 0x50, 0xb9, 0x1b, 0x43, 0x0b, 0x93,
    0xfb, 0x9a, 0x4b, 0xd3, 0x2b, 0x1b, 0x62, 0x24, 0x02, 0x22, 0x24, 0x06,
    0xd9, 0x20, 0x08, 0x0e, 0x8e, 0xad, 0x0c, 0x84, 0x89, 0xc9, 0xaa, 0x09,
    0xc4, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x0d, 0x64, 0x26, 0x07, 0x46,
    0xc6, 0xc5, 0xe6, 0x06, 0x04, 0xa5, 0xad, 0x8c, 0x2e, 0x8c, 0xcd, 0xac,
    0xac, 0x65, 0x26, 0x07, 0x46, 0xc6, 0xc5, 0xe6, 0x26, 0x65, 0x88, 0x80,
    0x10, 0x43, 0x8c, 0x44, 0x48, 0x88, 0x64, 0x60, 0xd1, 0x54, 0x46, 0x17,
    0xc6, 0x36, 0x04, 0x41, 0x8e, 0x44, 0x48, 0x86, 0x64, 0xe0, 0x16, 0x96,
    0x26, 0xe7, 0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56, 0xe6, 0x42, 0x56,
    0xe6, 0xf6, 0x26, 0xd7, 0x36, 0xf7, 0x45, 0x96, 0x36, 0x17, 0x26, 0xc6,
    0x56, 0x36, 0x44, 0x40, 0x12, 0x72, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f,
    0x6d, 0x70, 0x69, 0x6c, 0x65, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x6d,
    0x61, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x04,
    0x64, 0x21, 0x19, 0x84, 0xa5, 0xc9, 0xb9, 0x8c, 0xbd, 0xb5, 0xc1, 0xa5,
    0xb1, 0x95, 0xb9, 0x98, 0xc9, 0x85, 0xb5, 0x95, 0x89, 0xd5, 0x99, 0x99,
    0x95, 0xc9, 0x7d, 0x99, 0x95, 0xd1, 0x8d, 0xa1, 0x7d, 0x95, 0xb9, 0x85,
    0x89, 0xb1, 0x95, 0x0d, 0x11, 0x90, 0x86, 0x61, 0x10, 0x96, 0x26, 0xe7,
    0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56, 0xe6, 0xe2, 0x16, 0x46, 0x97,
    0x66, 0x57, 0xf6, 0x45, 0xf6, 0x56, 0x27, 0xc6, 0x56, 0xf6, 0x45, 0x96,
    0x36, 0x17, 0x26, 0xc6, 0x56, 0x36, 0x44, 0x40, 0x1e, 0x92, 0x41, 0x58,
    0x9a, 0x9c, 0xcb, 0xd8, 0x5b, 0x1b, 0x5c, 0x1a, 0x5b, 0x99, 0x8b, 0x5b,
    0x18, 0x5d, 0x9a, 0x5d, 0xd9, 0x17, 0xdb, 0x9b, 0xdb, 0xd9, 0x17, 0xdb,
    0x9b, 0xdb, 0xd9, 0x17, 0x59, 0xda, 0x5c, 0x98, 0x18, 0x5b, 0xd9, 0x10,
    0x01, 0x89, 0x78, 0x06, 0x61, 0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
    0x69, 0x6c, 0x65, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77,
    0x69, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f,
    0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x04, 0x64, 0x62, 0x14,
    0x96, 0x26, 0xe7, 0x62, 0x57, 0x26, 0x47, 0x57, 0x86, 0xf7, 0xf5, 0x56,
    0x47, 0x07, 0x57, 0x47, 0xc7, 0xa5, 0x6e, 0xae, 0x4c, 0x0e, 0x85, 0xed,
    0x6d, 0xcc, 0x0d, 0x26, 0x85, 0x51, 0x58, 0x9a, 0x9c, 0x4b, 0x98, 0xdc,
    0xd9, 0x17, 0x5d, 0x1e, 0x5c, 0xd9, 0x97, 0x5b, 0x58, 0x5b, 0x19, 0x0d,
    0x33, 0xb6, 0xb7, 0x30, 0x3a, 0x19, 0x32, 0x61, 0x69, 0x72, 0x2e, 0x61,
    0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x14, 0xea, 0xec, 0x86, 0x30,
    0x48, 0x85, 0x58, 0xc8, 0x85, 0x60, 0x48, 0x86, 0x68, 0x5c, 0xea, 0xe6,
    0xca, 0xe4, 0x50, 0xd8, 0xde, 0xc6, 0xdc, 0x62, 0x52, 0x68, 0x98, 0xb1,
    0xbd, 0x85, 0xd1, 0xd1, 0xb0, 0x18, 0x7b, 0x63, 0x7b, 0x93, 0x1b, 0xc2,
    0x20, 0x15, 0xc2, 0x21, 0x17, 0xd2, 0x21, 0x19, 0xe2, 0x91, 0x09, 0x4b,
    0x93, 0x73, 0x81, 0x7b, 0x9b, 0x4b, 0xa3, 0x4b, 0x7b, 0x73, 0xe3, 0x72,
    0xc6, 0xf6, 0x05, 0xf5, 0x36, 0x97, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x44,
    0x41, 0xc0, 0x00, 0xb9, 0x90, 0x0e, 0xc9, 0x90, 0x30, 0x18, 0x62, 0x20,
    0x1b, 0xf2, 0x21, 0x62, 0x40, 0x28, 0x2c, 0x4d, 0xce, 0xc5, 0xae, 0x4c,
    0x8e, 0xae, 0x0c, 0xef, 0x2b, 0xcd, 0x0d, 0xae, 0x8e, 0x8e, 0x52, 0x58,
    0x9a, 0x9c, 0x0b, 0xdb, 0xdb, 0x58, 0x18, 0x5d, 0xda, 0x9b, 0xdb, 0x57,
    0x9a, 0x1b, 0x59, 0x19, 0x1e, 0xb3, 0xb3, 0x32, 0xb7, 0x32, 0xb9, 0x30,
    0xba, 0x32, 0x32, 0x14, 0x1c, 0xb8, 0xb7, 0xb9, 0x34, 0xba, 0xb4, 0x37,
    0x37, 0x22, 0x3b, 0x99, 0x2f, 0xb3, 0x14, 0x22, 0x70, 0x6f, 0x73, 0x69,
    0x74, 0x69, 0x6f, 0x6e, 0x43, 0xa8, 0x64, 0x40, 0xc8, 0x00, 0x29, 0x83,
    0x64, 0x48, 0x04, 0xc4, 0x0c, 0x90, 0x0b, 0xc1, 0x90, 0x0c, 0x39, 0x03,
    0x6a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x28, 0x39,
    0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x44, 0x76, 0x32,
    0x5f, 0x66, 0x29, 0x4c, 0xe8, 0xca, 0xf0, 0xc6, 0xde, 0xde, 0xe4, 0xc8,
    0x60, 0x86, 0x50, 0x89, 0x80, 0x90, 0x01, 0x52, 0x06, 0x89, 0x90, 0x08,
    0x48, 0x1a, 0x20, 0x17, 0x82, 0x21, 0x19, 0xa2, 0x06, 0xbc, 0xce, 0xca,
    0xdc, 0xca, 0xe4, 0xc2, 0xe8, 0xca, 0xc8, 0x50, 0x6c, 0xc6, 0xde, 0xd8,
    0xde, 0xe4, 0x60, 0x88, 0xec, 0x68, 0xbe, 0xcc, 0x52, 0x68, 0x8c, 0xbd,
    0xb1, 0xbd, 0xc9, 0xc1, 0x0c, 0xa1, 0x92, 0x02, 0x21, 0x03, 0xa4, 0x0c,
    0x92, 0x22, 0x11, 0x10, 0x36, 0x40, 0x2e, 0xa4, 0x43, 0x32, 0xa4, 0x0d,
    0xa8, 0x84, 0xa5, 0xc9, 0xb9, 0x88, 0xd5, 0x99, 0x99, 0x95, 0xc9, 0xf1,
    0x09, 0x4b, 0x93, 0x73, 0x11, 0xab, 0x33, 0x33, 0x2b, 0x93, 0xfb, 0x9a,
    0x4b, 0xd3, 0x2b, 0x23, 0x12, 0x96, 0x26, 0xe7, 0x22, 0x57, 0x16, 0x46,
    0x46, 0x2a, 0x2c, 0x4d, 0xce, 0x65, 0x8e, 0x4e, 0xae, 0x6e, 0x8c, 0xee,
    0x8b, 0x2e, 0x0f, 0xae, 0xec, 0x2b, 0xcd, 0xcd, 0xec, 0x8d, 0x09, 0x59,
    0xda, 0x1c, 0xdc, 0xd7, 0x5c, 0x9a, 0x5e, 0xd9, 0x10, 0x25, 0x19, 0x12,
    0x22, 0x19, 0x10, 0x0c, 0x99, 0x03, 0x46, 0x61, 0x69, 0x72, 0x2e, 0x61,
    0x72, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
    0xbc, 0xc2, 0xd2, 0xe4, 0x5c, 0xc2, 0xe4, 0xce, 0xbe, 0xe8, 0xf2, 0xe0,
    0xca, 0xbe, 0xc2, 0xd8, 0xd2, 0xce, 0xdc, 0xbe, 0xe6, 0xd2, 0xf4, 0xca,
    0x98, 0xd8, 0xcd, 0x7d, 0xc1, 0x85, 0xc9, 0x85, 0xb5, 0xcd, 0x71, 0xf8,
    0x92, 0x99, 0x19, 0x42, 0x06, 0xc9, 0x81, 0xbc, 0x01, 0x02, 0x07, 0x09,
    0x81, 0x94, 0x41, 0x32, 0x24, 0x02, 0x12, 0x07, 0x88, 0x1c, 0x20, 0x74,
    0x80, 0xd4, 0x41, 0x42, 0x20, 0x76, 0x90, 0x10, 0xc8, 0x85, 0xdc, 0x01,
    0x92, 0x21, 0x78, 0x30, 0x04, 0x41, 0xd0, 0x00, 0x59, 0x03, 0xc4, 0x0d,
    0x90, 0x3c, 0x18, 0x62, 0x1c, 0x00, 0x32, 0x06, 0x88, 0x1e, 0xf0, 0x79,
    0x6b, 0x73, 0x4b, 0x83, 0x7b, 0xa3, 0x2b, 0x73, 0xa3, 0x03, 0x19, 0x43,
    0x0b, 0x93, 0xe3, 0x33, 0x95, 0xd6, 0x06, 0xc7, 0x56, 0x06, 0x32, 0xb4,
    0xb2, 0x02, 0x42, 0x25, 0x14, 0x14, 0x34, 0x44, 0x40, 0xfa, 0x60, 0x88,
    0x81, 0xf0, 0x01, 0xe2, 0x07, 0x4b, 0x30, 0xc4, 0x40, 0xfe, 0x00, 0xf9,
    0x83, 0x25, 0x18, 0x22, 0x00, 0xc9, 0x88, 0x88, 0x1d, 0xd8, 0xc1, 0x1e,
    0xda, 0xc1, 0x0d, 0xda, 0xe1, 0x1d, 0xc8, 0xa1, 0x1e, 0xd8, 0xa1, 0x1c,
    0xdc, 0xc0, 0x1c, 0xd8, 0x21, 0x1c, 0xce, 0x61, 0x1e, 0xa6, 0x08, 0xc1,
    0x30, 0x42, 0x61, 0x07, 0x76, 0xb0, 0x87, 0x76, 0x70, 0x83, 0x74, 0x20,
    0x87, 0x72, 0x70, 0x07, 0x7a, 0x98, 0x12, 0x14, 0x23, 0x96, 0x70, 0x48,
    0x07, 0x79, 0x70, 0x03, 0x7b, 0x28, 0x07, 0x79, 0x98, 0x87, 0x74, 0x78,
    0x07, 0x77, 0x98, 0x12, 0x18, 0x23, 0xa8, 0x70, 0x48, 0x07, 0x79, 0x70,
    0x03, 0x76, 0x08, 0x07, 0x77, 0x38, 0x87, 0x7a, 0x08, 0x87, 0x73, 0x28,
    0x87, 0x5f, 0xb0, 0x87, 0x72, 0x90, 0x87, 0x79, 0x48, 0x87, 0x77, 0x70,
    0x87, 0x29, 0x01, 0x32, 0x62, 0x0a, 0x87, 0x74, 0x90, 0x07, 0x37, 0x18,
    0x87, 0x77, 0x68, 0x07, 0x78, 0x48, 0x07, 0x76, 0x28, 0x87, 0x5f, 0x78,
    0x07, 0x78, 0xa0, 0x87, 0x74, 0x78, 0x07, 0x77, 0x98, 0x87, 0x29, 0x86,
    0xc2, 0x38, 0x90, 0x44, 0x8d, 0x50, 0xc2, 0x21, 0x1d, 0xe4, 0xc1, 0x0d,
    0xec, 0xa1, 0x1c, 0xe4, 0x81, 0x1e, 0xca, 0x01, 0x1f, 0xa6, 0x04, 0x7b,
    0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
    0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
    0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
    0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
    0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
    0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
    0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
    0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
    0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
    0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
    0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
    0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
    0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
    0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
    0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
    0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
    0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
    0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
    0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
    0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
    0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
    0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc7,
    0x69, 0x87, 0x70, 0x58, 0x87, 0x72, 0x70, 0x83, 0x74, 0x68, 0x07, 0x78,
    0x60, 0x87, 0x74, 0x18, 0x87, 0x74, 0xa0, 0x87, 0x19, 0xce, 0x53, 0x0f,
    0xee, 0x00, 0x0f, 0xf2, 0x50, 0x0e, 0xe4, 0x90, 0x0e, 0xe3, 0x40, 0x0f,
    0xe1, 0x20, 0x0e, 0xec, 0x50, 0x0e, 0x33, 0x20, 0x28, 0x1d, 0xdc, 0xc1,
    0x1e, 0xc2, 0x41, 0x1e, 0xd2, 0x21, 0x1c, 0xdc, 0x81, 0x1e, 0xdc, 0xe0,
    0x1c, 0xe4, 0xe1, 0x1d, 0xea, 0x01, 0x1e, 0x66, 0x18, 0x51, 0x38, 0xb0,
    0x43, 0x3a, 0x9c, 0x83, 0x3b, 0xcc, 0x50, 0x24, 0x76, 0x60, 0x07, 0x7b,
    0x68, 0x07, 0x37, 0x60, 0x87, 0x77, 0x78, 0x07, 0x78, 0x98, 0x51, 0x4c,
    0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x33, 0x1e, 0x6a, 0x1e, 0xca, 0x61,
    0x1c, 0xe8, 0x21, 0x1d, 0xde, 0xc1, 0x1d, 0x7e, 0x01, 0x1e, 0xe4, 0xa1,
    0x1c, 0xcc, 0x21, 0x1d, 0xf0, 0x61, 0x06, 0x54, 0x85, 0x83, 0x38, 0xcc,
    0xc3, 0x3b, 0xb0, 0x43, 0x3d, 0xd0, 0x43, 0x39, 0xfc, 0xc2, 0x3c, 0xe4,
    0x43, 0x3b, 0x88, 0xc3, 0x3b, 0xb0, 0xc3, 0x8c, 0xc5, 0x0a, 0x87, 0x79,
    0x98, 0x87, 0x77, 0x18, 0x87, 0x74, 0x08, 0x07, 0x7a, 0x28, 0x07, 0x72,
    0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x06, 0x50, 0x30, 0x00, 0xd2, 0xd0, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
    0x24, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
    0x11, 0x00, 0x00, 0x00, 0xd4, 0x63, 0x11, 0x40, 0x60, 0x1c, 0x73, 0x10,
    0x83, 0x00, 0x41, 0x94, 0x33, 0x00, 0x14, 0x63, 0x09, 0x20, 0x08, 0x82,
    0xf0, 0x2f, 0x80, 0x20, 0x08, 0xc2, 0xbf, 0x30, 0x96, 0x00, 0x82, 0x20,
    0x08, 0x82, 0x01, 0x08, 0x82, 0x20, 0x08, 0x0e, 0x33, 0x00, 0x24, 0x73,
    0x10, 0x18, 0x76, 0x59, 0x34, 0x33, 0x00, 0x04, 0x63, 0x04, 0x20, 0x08,
    0x82, 0xf8, 0x37, 0x46, 0x00, 0x82, 0x20, 0x08, 0x7f, 0x33, 0x00, 0x00,
    0xe3, 0x0d, 0x0c, 0x66, 0x51, 0x40, 0x2c, 0x0a, 0xe8, 0x63, 0xc1, 0x02,
    0x1f, 0x0b, 0x16, 0xf9, 0x0c, 0x32, 0x04, 0xcb, 0x33, 0xc8, 0x10, 0x2c,
    0xd1, 0x6c, 0xc3, 0x52, 0x01, 0xb3, 0x0d, 0x41, 0x15, 0xcc, 0x36, 0x04,
    0x83, 0x90, 0x41, 0x40, 0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x5b, 0x86, 0x20, 0x00, 0x85, 0x2d, 0x83, 0x30, 0x84, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
static const uint8_t yk___snk_fs_bytecode_metal_ios[2893] = {
    0x4d, 0x54, 0x4c, 0x42, 0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x4d, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x0a, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
    0x4e, 0x41, 0x4d, 0x45, 0x06, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x00,
    0x54, 0x59, 0x50, 0x45, 0x01, 0x00, 0x01, 0x48, 0x41, 0x53, 0x48, 0x20,
    0x00, 0xe9, 0x4a, 0xc6, 0xd1, 0xba, 0x33, 0x39, 0x67, 0xdf, 0xcd, 0xe3,
    0x58, 0xde, 0xd4, 0xb8, 0x81, 0x4c, 0x26, 0x44, 0xbc, 0x9d, 0x14, 0xdc,
    0xa9, 0x02, 0x93, 0x08, 0x5a, 0xcd, 0x66, 0x1c, 0x30, 0x4f, 0x46, 0x46,
    0x54, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x56, 0x45, 0x52, 0x53, 0x08, 0x00, 0x01, 0x00, 0x08,
    0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x4e, 0x44, 0x54, 0x45, 0x4e, 0x44,
    0x54, 0x04, 0x00, 0x00, 0x00, 0x45, 0x4e, 0x44, 0x54, 0x04, 0x00, 0x00,
    0x00, 0x45, 0x4e, 0x44, 0x54, 0xde, 0xc0, 0x17, 0x0b, 0x00, 0x00, 0x00,
    0x00, 0x14, 0x00, 0x00, 0x00, 0x58, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xff,
    0xff, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x93, 0x02, 0x00,
    0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
    0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32,
    0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b,
    0x62, 0x80, 0x14, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xa4, 0x10, 0x32,
    0x14, 0x38, 0x08, 0x18, 0x49, 0x0a, 0x32, 0x44, 0x24, 0x48, 0x0a, 0x90,
    0x21, 0x23, 0xc4, 0x52, 0x80, 0x0c, 0x19, 0x21, 0x72, 0x24, 0x07, 0xc8,
    0x48, 0x11, 0x62, 0xa8, 0xa0, 0xa8, 0x40, 0xc6, 0xf0, 0x01, 0x00, 0x00,
    0x00, 0x51, 0x18, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x1b, 0xcc, 0x25,
    0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x60, 0x00, 0x09, 0xa8, 0x88, 0x71,
    0x78, 0x07, 0x79, 0x90, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x60, 0x87, 0x7c,
    0x68, 0x03, 0x79, 0x78, 0x87, 0x7a, 0x70, 0x07, 0x72, 0x28, 0x07, 0x72,
    0x68, 0x03, 0x72, 0x48, 0x07, 0x7b, 0x48, 0x07, 0x72, 0x28, 0x87, 0x36,
    0x98, 0x87, 0x78, 0x90, 0x07, 0x7a, 0x68, 0x03, 0x73, 0x80, 0x87, 0x36,
    0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xcc, 0x21, 0x1c, 0xd8, 0x61,
    0x1e, 0xca, 0x01, 0x20, 0xc8, 0x21, 0x1d, 0xe6, 0x21, 0x1c, 0xc4, 0x81,
    0x1d, 0xca, 0xa1, 0x0d, 0xe8, 0x21, 0x1c, 0xd2, 0x81, 0x1d, 0xda, 0x60,
    0x1c, 0xc2, 0x81, 0x1d, 0xd8, 0x61, 0x1e, 0x00, 0x73, 0x08, 0x07, 0x76,
    0x98, 0x87, 0x72, 0x00, 0x08, 0x76, 0x28, 0x87, 0x79, 0x98, 0x87, 0x36,
    0x80, 0x07, 0x79, 0x28, 0x87, 0x71, 0x48, 0x87, 0x79, 0x28, 0x87, 0x36,
    0x30, 0x07, 0x78, 0x68, 0x87, 0x70, 0x20, 0x07, 0xc0, 0x1c, 0xc2, 0x81,
    0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xcc, 0x41,
    0x1e, 0xc2, 0xa1, 0x1d, 0xca, 0xa1, 0x0d, 0xe0, 0xe1, 0x1d, 0xd2, 0xc1,
    0x1d, 0xe8, 0xa1, 0x1c, 0xe4, 0xa1, 0x0d, 0xca, 0x81, 0x1d, 0xd2, 0xa1,
    0x1d, 0x00, 0x7a, 0x90, 0x87, 0x7a, 0x28, 0x07, 0x60, 0x70, 0x87, 0x77,
    0x68, 0x03, 0x73, 0x90, 0x87, 0x70, 0x68, 0x87, 0x72, 0x68, 0x03, 0x78,
    0x78, 0x87, 0x74, 0x70, 0x07, 0x7a, 0x28, 0x07, 0x79, 0x68, 0x83, 0x72,
    0x60, 0x87, 0x74, 0x68, 0x87, 0x36, 0x70, 0x87, 0x77, 0x70, 0x87, 0x36,
    0x60, 0x87, 0x72, 0x08, 0x07, 0x73, 0x00, 0x08, 0x77, 0x78, 0x87, 0x36,
    0x48, 0x07, 0x77, 0x30, 0x87, 0x79, 0x68, 0x03, 0x73, 0x80, 0x87, 0x36,
    0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xe8, 0x41, 0x1e, 0xea, 0xa1,
    0x1c, 0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xd4, 0xa1, 0x1e, 0xda, 0x01,
    0x1e, 0xda, 0x80, 0x1e, 0xc2, 0x41, 0x1c, 0xd8, 0xa1, 0x1c, 0xe6, 0x01,
    0x30, 0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x70, 0x87, 0x77,
    0x68, 0x03, 0x77, 0x08, 0x07, 0x77, 0x98, 0x87, 0x36, 0x30, 0x07, 0x78,
    0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0x80, 0x1e, 0xe4, 0xa1,
    0x1e, 0xca, 0x01, 0x20, 0xdc, 0xe1, 0x1d, 0xda, 0x60, 0x1e, 0xd2, 0xe1,
    0x1c, 0xdc, 0xa1, 0x1c, 0xc8, 0xa1, 0x0d, 0xf4, 0xa1, 0x1c, 0xe4, 0xe1,
    0x1d, 0xe6, 0xa1, 0x0d, 0xcc, 0x01, 0x1e, 0xda, 0xa0, 0x1d, 0xc2, 0x81,
    0x1e, 0xd0, 0x01, 0xa0, 0x07, 0x79, 0xa8, 0x87, 0x72, 0x00, 0x08, 0x77,
    0x78, 0x87, 0x36, 0xa0, 0x07, 0x79, 0x08, 0x07, 0x78, 0x80, 0x87, 0x74,
    0x70, 0x87, 0x73, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40, 0x07, 0x80,
    0x1e, 0xe4, 0xa1, 0x1e, 0xca, 0x01, 0x20, 0xe6, 0x81, 0x1e, 0xc2, 0x61,
    0x1c, 0xd6, 0xa1, 0x0d, 0xe0, 0x41, 0x1e, 0xde, 0x81, 0x1e, 0xca, 0x61,
    0x1c, 0xe8, 0xe1, 0x1d, 0xe4, 0xa1, 0x0d, 0xc4, 0xa1, 0x1e, 0xcc, 0xc1,
    0x1c, 0xca, 0x41, 0x1e, 0xda, 0x60, 0x1e, 0xd2, 0x41, 0x1f, 0xca, 0x01,
    0xc0, 0x03, 0x80, 0xa8, 0x07, 0x77, 0x98, 0x87, 0x70, 0x30, 0x87, 0x72,
    0x68, 0x03, 0x73, 0x80, 0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74,
    0x00, 0xe8, 0x41, 0x1e, 0xea, 0xa1, 0x1c, 0x00, 0xa2, 0x1e, 0xe6, 0xa1,
    0x1c, 0xda, 0x60, 0x1e, 0xde, 0xc1, 0x1c, 0xe8, 0xa1, 0x0d, 0xcc, 0x81,
    0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x01, 0x30, 0x87, 0x70, 0x60, 0x87, 0x79,
    0x28, 0x07, 0x60, 0x83, 0x21, 0x0c, 0xc0, 0x02, 0x54, 0x1b, 0x8c, 0x81,
    0x00, 0x16, 0xa0, 0xda, 0x80, 0x10, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00,
    0x0c, 0x20, 0x01, 0xd5, 0x06, 0xa3, 0x08, 0x80, 0x05, 0xa8, 0x36, 0x18,
    0x86, 0x00, 0x2c, 0x40, 0x05, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00,
    0x00, 0x13, 0x86, 0x40, 0x18, 0x26, 0x0c, 0x44, 0x61, 0x00, 0x00, 0x00,
    0x00, 0x89, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x32, 0x22, 0x48,
    0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x22, 0xa4, 0x84, 0x04, 0x93, 0x22,
    0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8a, 0x8c, 0x0b, 0x84, 0xa4,
    0x4c, 0x10, 0x48, 0x33, 0x00, 0xc3, 0x08, 0x04, 0x70, 0x90, 0x34, 0x45,
    0x94, 0x30, 0xf9, 0x0c, 0x80, 0x34, 0xf4, 0xef, 0x50, 0x13, 0x0a, 0xc2,
    0x30, 0x82, 0x00, 0x1c, 0x25, 0x4d, 0x11, 0x25, 0x4c, 0xfe, 0x3f, 0x11,
    0xd7, 0x44, 0x45, 0xc4, 0x6f, 0x0f, 0xff, 0x34, 0x46, 0x00, 0x0c, 0x22,
    0x10, 0xc1, 0x45, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xff, 0x12, 0xc0, 0x3c,
    0x0b, 0x11, 0xfd, 0xd3, 0x18, 0x01, 0x30, 0x88, 0x60, 0x08, 0xa5, 0x10,
    0x23, 0x94, 0x43, 0x68, 0x8e, 0x20, 0x98, 0x23, 0x00, 0x83, 0x61, 0x04,
    0x61, 0x29, 0x48, 0x28, 0x67, 0x28, 0xa6, 0x00, 0xb5, 0x81, 0x80, 0x14,
    0x58, 0x23, 0x00, 0x00, 0x00, 0x13, 0xa8, 0x70, 0x48, 0x07, 0x79, 0xb0,
    0x03, 0x3a, 0x68, 0x83, 0x70, 0x80, 0x07, 0x78, 0x60, 0x87, 0x72, 0x68,
    0x83, 0x74, 0x78, 0x87, 0x79, 0xc8, 0x03, 0x37, 0x80, 0x03, 0x37, 0x80,
    0x83, 0x0d, 0xb7, 0x51, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x60, 0x07, 0x74,
    0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe9,
    0x10, 0x07, 0x7a, 0x80, 0x07, 0x7a, 0x80, 0x07, 0x6d, 0x90, 0x0e, 0x78,
    0xa0, 0x07, 0x78, 0xa0, 0x07, 0x78, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
    0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xd0, 0x06, 0xe9,
    0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
    0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a,
    0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
    0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74,
    0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xf6,
    0x10, 0x07, 0x76, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x10, 0x07, 0x76,
    0xd0, 0x06, 0xf6, 0x20, 0x07, 0x74, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
    0x30, 0x07, 0x72, 0xd0, 0x06, 0xf6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
    0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xf6, 0x40, 0x07, 0x78,
    0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xf6,
    0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
    0xd0, 0x06, 0xf6, 0x90, 0x07, 0x76, 0xa0, 0x07, 0x71, 0x20, 0x07, 0x78,
    0xa0, 0x07, 0x71, 0x20, 0x07, 0x78, 0xd0, 0x06, 0xf6, 0x10, 0x07, 0x72,
    0x80, 0x07, 0x7a, 0x10, 0x07, 0x72, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x72,
    0x80, 0x07, 0x6d, 0x60, 0x0f, 0x71, 0x90, 0x07, 0x72, 0xa0, 0x07, 0x72,
    0x50, 0x07, 0x76, 0xa0, 0x07, 0x72, 0x50, 0x07, 0x76, 0xd0, 0x06, 0xf6,
    0x20, 0x07, 0x75, 0x60, 0x07, 0x7a, 0x20, 0x07, 0x75, 0x60, 0x07, 0x7a,
    0x20, 0x07, 0x75, 0x60, 0x07, 0x6d, 0x60, 0x0f, 0x75, 0x10, 0x07, 0x72,
    0xa0, 0x07, 0x75, 0x10, 0x07, 0x72, 0xa0, 0x07, 0x75, 0x10, 0x07, 0x72,
    0xd0, 0x06, 0xf6, 0x10, 0x07, 0x70, 0x20, 0x07, 0x74, 0xa0, 0x07, 0x71,
    0x00, 0x07, 0x72, 0x40, 0x07, 0x7a, 0x10, 0x07, 0x70, 0x20, 0x07, 0x74,
    0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73,
    0x20, 0x07, 0x43, 0x98, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x80, 0x21, 0x8c, 0x03, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
    0x16, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98,
    0x10, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43,
    0x5a, 0x23, 0x00, 0x25, 0x50, 0x04, 0x85, 0x50, 0x10, 0x65, 0x40, 0x70,
    0x2c, 0xa1, 0x29, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xd9, 0x00, 0x00,
    0x00, 0x1a, 0x03, 0x4c, 0x10, 0x97, 0x29, 0xa2, 0x25, 0x10, 0xab, 0x32,
    0xb9, 0xb9, 0xb4, 0x37, 0xb7, 0x21, 0xc6, 0x42, 0x3c, 0x00, 0x84, 0x50,
    0xb9, 0x1b, 0x43, 0x0b, 0x93, 0xfb, 0x9a, 0x4b, 0xd3, 0x2b, 0x1b, 0x62,
    0x2c, 0xc3, 0x23, 0x2c, 0x05, 0xd9, 0x20, 0x08, 0x0e, 0x8e, 0xad, 0x0c,
    0x84, 0x89, 0xc9, 0xaa, 0x09, 0xc4, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd,
    0x0d, 0x64, 0x26, 0x07, 0x46, 0xc6, 0xc5, 0xe6, 0x06, 0x04, 0xa5, 0xad,
    0x8c, 0x2e, 0x8c, 0xcd, 0xac, 0xac, 0x65, 0x26, 0x07, 0x46, 0xc6, 0xc5,
    0xe6, 0x26, 0x65, 0x88, 0xf0, 0x10, 0x43, 0x8c, 0x65, 0x58, 0x8c, 0x45,
    0x60, 0xd1, 0x54, 0x46, 0x17, 0xc6, 0x36, 0x04, 0x79, 0x8e, 0x65, 0x58,
    0x84, 0x45, 0xe0, 0x16, 0x96, 0x26, 0xe7, 0x32, 0xf6, 0xd6, 0x06, 0x97,
    0xc6, 0x56, 0xe6, 0x42, 0x56, 0xe6, 0xf6, 0x26, 0xd7, 0x36, 0xf7, 0x45,
    0x96, 0x36, 0x17, 0x26, 0xc6, 0x56, 0x36, 0x44, 0x78, 0x12, 0x72, 0x61,
    0x69, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x2e, 0x66,
    0x61, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x65, 0x6e, 0x61,
    0x62, 0x6c, 0x65, 0x43, 0x84, 0x67, 0x21, 0x19, 0x84, 0xa5, 0xc9, 0xb9,
    0x8c, 0xbd, 0xb5, 0xc1, 0xa5, 0xb1, 0x95, 0xb9, 0x98, 0xc9, 0x85, 0xb5,
    0x95, 0x89, 0xd5, 0x99, 0x99, 0x95, 0xc9, 0x7d, 0x99, 0x95, 0xd1, 0x8d,
    0xa1, 0x7d, 0x95, 0xb9, 0x85, 0x89, 0xb1, 0x95, 0x0d, 0x11, 0x9e, 0x86,
    0x61, 0x10, 0x96, 0x26, 0xe7, 0x32, 0xf6, 0xd6, 0x06, 0x97, 0xc6, 0x56,
    0xe6, 0xe2, 0x16, 0x46, 0x97, 0x66, 0x57, 0xf6, 0x45, 0xf6, 0x56, 0x27,
    0xc6, 0x56, 0xf6, 0x45, 0x96, 0x36, 0x17, 0x26, 0xc6, 0x56, 0x36, 0x44,
    0x78, 0x1e, 0x92, 0x41, 0x58, 0x9a, 0x9c, 0xcb, 0xd8, 0x5b, 0x1b, 0x5c,
    0x1a, 0x5b, 0x99, 0x8b, 0x5b, 0x18, 0x5d, 0x9a, 0x5d, 0xd9, 0x17, 0xdb,
    0x9b, 0xdb, 0xd9, 0x17, 0xdb, 0x9b, 0xdb, 0xd9, 0x17, 0x59, 0xda, 0x5c,
    0x98, 0x18, 0x5b, 0xd9, 0x10, 0xe1, 0x89, 0x78, 0x06, 0x61, 0x69, 0x72,
    0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x2e, 0x6e, 0x61, 0x74,
    0x69, 0x76, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x63,
    0x74, 0x6f, 0x72, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
    0x43, 0x84, 0x67, 0x62, 0x14, 0x96, 0x26, 0xe7, 0x22, 0x57, 0xe6, 0x46,
    0x56, 0x26, 0xf7, 0x45, 0x17, 0x26, 0x77, 0x56, 0x46, 0xc7, 0x28, 0x2c,
    0x4d, 0xce, 0x25, 0x4c, 0xee, 0xec, 0x8b, 0x2e, 0x0f, 0xae, 0xec, 0xcb,
    0x2d, 0xac, 0xad, 0x8c, 0x86, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x0d, 0x99,
    0xb0, 0x34, 0x39, 0x97, 0x30, 0xb9, 0xb3, 0x2f, 0xb7, 0xb0, 0xb6, 0x32,
    0x2a, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43,
    0x98, 0xa7, 0x5a, 0x84, 0xc7, 0x7a, 0xae, 0x07, 0x7b, 0xb2, 0x21, 0xc2,
    0xa3, 0x51, 0x0a, 0x4b, 0x93, 0x73, 0x31, 0x93, 0x0b, 0x3b, 0x6b, 0x2b,
    0x73, 0xa3, 0xfb, 0x4a, 0x73, 0x83, 0xab, 0xa3, 0xe3, 0x52, 0x37, 0x57,
    0x26, 0x87, 0xc2, 0xf6, 0x36, 0xe6, 0x06, 0x93, 0x42, 0x25, 0x2c, 0x4d,
    0xce, 0x65, 0xac, 0xcc, 0x8d, 0xae, 0x4c, 0x8e, 0x4f, 0x58, 0x9a, 0x9c,
    0x0b, 0x5c, 0x99, 0xdc, 0x1c, 0x5c, 0xd9, 0x18, 0x5d, 0x9a, 0x5d, 0x19,
    0x0d, 0x33, 0xb6, 0xb7, 0x30, 0x3a, 0x19, 0x0a, 0x75, 0x76, 0x43, 0xa4,
    0x45, 0x78, 0xb8, 0xa7, 0x7b, 0xbc, 0xe7, 0x7b, 0xac, 0x07, 0x0c, 0x1e,
    0xec, 0x09, 0x03, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63,
    0x6e, 0x31, 0x29, 0x2c, 0xc6, 0xde, 0xd8, 0xde, 0xe4, 0x86, 0x48, 0xcb,
    0xf0, 0x70, 0xcf, 0x18, 0x3c, 0xde, 0xf3, 0x3d, 0xd6, 0x73, 0x3d, 0xd8,
    0x43, 0x06, 0x5c, 0xc2, 0xd2, 0xe4, 0x5c, 0xe8, 0xca, 0xf0, 0xe8, 0xea,
    0xe4, 0xca, 0x28, 0x85, 0xa5, 0xc9, 0xb9, 0xb0, 0xbd, 0x8d, 0x85, 0xd1,
    0xa5, 0xbd, 0xb9, 0x7d, 0xa5, 0xb9, 0x91, 0x95, 0xe1, 0x51, 0x09, 0x4b,
    0x93, 0x73, 0x99, 0x0b, 0x6b, 0x83, 0x63, 0x2b, 0x23, 0x46, 0x57, 0x86,
    0x47, 0x57, 0x27, 0x57, 0x26, 0x43, 0xc6, 0x63, 0xc6, 0xf6, 0x16, 0x46,
    0xc7, 0x02, 0x32, 0x17, 0xd6, 0x06, 0xc7, 0x56, 0xe6, 0xc3, 0x81, 0xae,
    0x0c, 0x6f, 0x08, 0xb5, 0x10, 0x8f, 0x19, 0x3c, 0x67, 0xb0, 0x08, 0xcb,
    0xf0, 0xa0, 0xc1, 0x63, 0x3d, 0x69, 0xf0, 0x60, 0x8f, 0x1a, 0x70, 0x09,
    0x4b, 0x93, 0x73, 0x99, 0x0b, 0x6b, 0x83, 0x63, 0x2b, 0x93, 0xe3, 0x31,
    0x17, 0xd6, 0x06, 0xc7, 0x56, 0x26, 0x47, 0x84, 0xae, 0x0c, 0x6f, 0xaa,
    0x0d, 0x8e, 0x4d, 0x6e, 0x88, 0xb4, 0x1c, 0x0f, 0x1b, 0x3c, 0x67, 0xb0,
    0x08, 0xcb, 0xf0, 0x58, 0x4f, 0x1b, 0x3c, 0xd8, 0xe3, 0x06, 0x43, 0x90,
    0x47, 0x0c, 0x9e, 0x32, 0x78, 0xd6, 0xe0, 0x79, 0x83, 0x21, 0x46, 0x02,
    0x3c, 0xdb, 0x03, 0x07, 0x23, 0x22, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07,
    0x37, 0x68, 0x87, 0x77, 0x20, 0x87, 0x7a, 0x60, 0x87, 0x72, 0x70, 0x03,
    0x73, 0x60, 0x87, 0x70, 0x38, 0x87, 0x79, 0x98, 0x22, 0x04, 0xc3, 0x08,
    0x85, 0x1d, 0xd8, 0xc1, 0x1e, 0xda, 0xc1, 0x0d, 0xd2, 0x81, 0x1c, 0xca,
    0xc1, 0x1d, 0xe8, 0x61, 0x4a, 0x50, 0x8c, 0x58, 0xc2, 0x21, 0x1d, 0xe4,
    0xc1, 0x0d, 0xec, 0xa1, 0x1c, 0xe4, 0x61, 0x1e, 0xd2, 0xe1, 0x1d, 0xdc,
    0x61, 0x4a, 0x60, 0x8c, 0xa0, 0xc2, 0x21, 0x1d, 0xe4, 0xc1, 0x0d, 0xd8,
    0x21, 0x1c, 0xdc, 0xe1, 0x1c, 0xea, 0x21, 0x1c, 0xce, 0xa1, 0x1c, 0x7e,
    0xc1, 0x1e, 0xca, 0x41, 0x1e, 0xe6, 0x21, 0x1d, 0xde, 0xc1, 0x1d, 0xa6,
    0x04, 0xc8, 0x88, 0x29, 0x1c, 0xd2, 0x41, 0x1e, 0xdc, 0x60, 0x1c, 0xde,
    0xa1, 0x1d, 0xe0, 0x21, 0x1d, 0xd8, 0xa1, 0x1c, 0x7e, 0xe1, 0x1d, 0xe0,
    0x81, 0x1e, 0xd2, 0xe1, 0x1d, 0xdc, 0x61, 0x1e, 0xa6, 0x18, 0x0a, 0xe3,
    0x40, 0x12, 0x35, 0x82, 0x09, 0x87, 0x74, 0x90, 0x07, 0x37, 0x30, 0x07,
    0x79, 0x08, 0x87, 0x73, 0x68, 0x87, 0x72, 0x70, 0x07, 0x7a, 0x98, 0x12,
    0xc4, 0x01, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x6d, 0x00, 0x00,
    0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d,
    0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07,
    0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80,
    0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66,
    0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d,
    0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07,
    0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03,
    0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90,
    0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50,
    0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2,
    0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39,
    0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14,
    0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07,
    0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07,
    0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87,
    0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0,
    0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8,
    0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc,
    0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6,
    0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39,
    0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f,
    0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c,
    0xc7, 0x69, 0x87, 0x70, 0x58, 0x87, 0x72, 0x70, 0x83, 0x74, 0x68, 0x07,
    0x78, 0x60, 0x87, 0x74, 0x18, 0x87, 0x74, 0xa0, 0x87, 0x19, 0xce, 0x53,
    0x0f, 0xee, 0x00, 0x0f, 0xf2, 0x50, 0x0e, 0xe4, 0x90, 0x0e, 0xe3, 0x40,
    0x0f, 0xe1, 0x20, 0x0e, 0xec, 0x50, 0x0e, 0x33, 0x20, 0x28, 0x1d, 0xdc,
    0xc1, 0x1e, 0xc2, 0x41, 0x1e, 0xd2, 0x21, 0x1c, 0xdc, 0x81, 0x1e, 0xdc,
    0xe0, 0x1c, 0xe4, 0xe1, 0x1d, 0xea, 0x01, 0x1e, 0x66, 0x18, 0x51, 0x38,
    0xb0, 0x43, 0x3a, 0x9c, 0x83, 0x3b, 0xcc, 0x50, 0x24, 0x76, 0x60, 0x07,
    0x7b, 0x68, 0x07, 0x37, 0x60, 0x87, 0x77, 0x78, 0x07, 0x78, 0x98, 0x51,
    0x4c, 0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x33, 0x1e, 0x6a, 0x1e, 0xca,
    0x61, 0x1c, 0xe8, 0x21, 0x1d, 0xde, 0xc1, 0x1d, 0x7e, 0x01, 0x1e, 0xe4,
    0xa1, 0x1c, 0xcc, 0x21, 0x1d, 0xf0, 0x61, 0x06, 0x54, 0x85, 0x83, 0x38,
    0xcc, 0xc3, 0x3b, 0xb0, 0x43, 0x3d, 0xd0, 0x43, 0x39, 0xfc, 0xc2, 0x3c,
    0xe4, 0x43, 0x3b, 0x88, 0xc3, 0x3b, 0xb0, 0xc3, 0x8c, 0xc5, 0x0a, 0x87,
    0x79, 0x98, 0x87, 0x77, 0x18, 0x87, 0x74, 0x08, 0x07, 0x7a, 0x28, 0x07,
    0x72, 0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x08, 0x00, 0x00,
    0x00, 0x16, 0xb0, 0x01, 0x48, 0xe4, 0x4b, 0x00, 0xf3, 0x2c, 0xc4, 0x3f,
    0x11, 0xd7, 0x44, 0x45, 0xc4, 0x6f, 0x0f, 0x7e, 0x85, 0x17, 0xb7, 0x6d,
    0x00, 0x05, 0x03, 0x20, 0x0d, 0x0d, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00,
    0x00, 0x0c, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0xc4, 0x46, 0x00, 0x48, 0x8d, 0x00, 0xd4,
    0x00, 0x89, 0x19, 0x00, 0x02, 0x23, 0x00, 0x00, 0x00, 0x23, 0x06, 0x8a,
    0x10, 0x44, 0x87, 0x91, 0x0c, 0x05, 0x11, 0x58, 0x90, 0xc8, 0x67, 0xb6,
    0x81, 0x08, 0x80, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00,
};
static const char yk___snk_vs_source_metal_sim[720] = {
    0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65,
    0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a,
    0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69,
    0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a,
    0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
    0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a,
    0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x76, 0x73, 0x5f, 0x70, 0x61,
    0x72, 0x61, 0x6d, 0x73, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
    0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x73,
    0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72,
    0x75, 0x63, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x5f, 0x6f, 0x75,
    0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61,
    0x74, 0x32, 0x20, 0x75, 0x76, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72,
    0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20,
    0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6f,
    0x6c, 0x6f, 0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c,
    0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20,
    0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x50,
    0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x70, 0x6f,
    0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b,
    0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x6d, 0x61, 0x69,
    0x6e, 0x30, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20,
    0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
    0x75, 0x74, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20,
    0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x74, 0x65, 0x78,
    0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74,
    0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x3b,
    0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20,
    0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x5b, 0x5b, 0x61, 0x74, 0x74,
    0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x3b,
    0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x31,
    0x35, 0x20, 0x22, 0x22, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x20,
    0x6d, 0x61, 0x69, 0x6e, 0x30, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x61,
    0x69, 0x6e, 0x30, 0x28, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x5f, 0x69, 0x6e,
    0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f,
    0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
    0x6e, 0x74, 0x20, 0x76, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
    0x26, 0x20, 0x5f, 0x32, 0x33, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66,
    0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20,
    0x20, 0x20, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x5f, 0x6f, 0x75, 0x74,
    0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x23,
    0x6c, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x35, 0x20, 0x22, 0x22, 0x0a, 0x20,
    0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x50, 0x6f,
    0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f,
    0x61, 0x74, 0x34, 0x28, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x70, 0x6f, 0x73,
    0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x2f, 0x20, 0x5f, 0x32, 0x33, 0x2e,
    0x64, 0x69, 0x73, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x29, 0x20, 0x2d,
    0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29,
    0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32,
    0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x32, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30,
    0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x23, 0x6c,
    0x69, 0x6e, 0x65, 0x20, 0x31, 0x36, 0x20, 0x22, 0x22, 0x0a, 0x20, 0x20,
    0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x75, 0x76, 0x20, 0x3d, 0x20, 0x69,
    0x6e, 0x2e, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x3b,
    0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x37, 0x20, 0x22, 0x22,
    0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x63, 0x6f, 0x6c,
    0x6f, 0x72, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6f,
    0x72, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75,
    0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,
};
static const char yk___snk_fs_source_metal_sim[470] = {
    0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65,
    0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a,
    0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69,
    0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a,
    0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
    0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a,
    0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x30,
    0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66,
    0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x63,
    0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
    0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73,
    0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x5f,
    0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f,
    0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65,
    0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a,
    0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63,
    0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28,
    0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b,
    0x0a, 0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x22,
    0x22, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6d,
    0x61, 0x69, 0x6e, 0x30, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6d, 0x61, 0x69,
    0x6e, 0x30, 0x28, 0x6d, 0x61, 0x69, 0x6e, 0x30, 0x5f, 0x69, 0x6e, 0x20,
    0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69,
    0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
    0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x74, 0x65,
    0x78, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28,
    0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
    0x72, 0x20, 0x74, 0x65, 0x78, 0x53, 0x6d, 0x70, 0x6c, 0x72, 0x20, 0x5b,
    0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d,
    0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x69,
    0x6e, 0x30, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d,
    0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x31,
    0x31, 0x20, 0x22, 0x22, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74,
    0x2e, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20,
    0x3d, 0x20, 0x74, 0x65, 0x78, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
    0x28, 0x74, 0x65, 0x78, 0x53, 0x6d, 0x70, 0x6c, 0x72, 0x2c, 0x20, 0x69,
    0x6e, 0x2e, 0x75, 0x76, 0x29, 0x20, 0x2a, 0x20, 0x69, 0x6e, 0x2e, 0x63,
    0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65,
    0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a,
    0x0a, 0x00,
};
#elif defined(YK__SOKOL_D3D11)
static const uint8_t yk___snk_vs_bytecode_hlsl4[892] = {
    0x44, 0x58, 0x42, 0x43, 0x05, 0xf8, 0x0b, 0x1e, 0x7a, 0x13, 0x49, 0x07,
    0x83, 0x60, 0x2e, 0x88, 0x06, 0xfa, 0x10, 0x2e, 0x01, 0x00, 0x00, 0x00,
    0x7c, 0x03, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
    0xfc, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x00, 0x52, 0x44, 0x45, 0x46, 0xc0, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x1c, 0x00, 0x00, 0x00, 0x00, 0x04, 0xfe, 0xff, 0x10, 0x81, 0x00, 0x00,
    0x98, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x76, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x00, 0xab, 0xab,
    0x3c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
    0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x5f, 0x32, 0x33, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x73, 0x69, 0x7a,
    0x65, 0x00, 0xab, 0xab, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x02, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x69, 0x63, 0x72,
    0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c,
    0x53, 0x4c, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f,
    0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x31, 0x30, 0x2e, 0x31, 0x00,
    0x49, 0x53, 0x47, 0x4e, 0x5c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x03, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x03, 0x03, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x0f, 0x0f, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
    0x00, 0xab, 0xab, 0xab, 0x4f, 0x53, 0x47, 0x4e, 0x68, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43,
    0x4f, 0x4f, 0x52, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69,
    0x74, 0x69, 0x6f, 0x6e, 0x00, 0xab, 0xab, 0xab, 0x53, 0x48, 0x44, 0x52,
    0x28, 0x01, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00, 0x4a, 0x00, 0x00, 0x00,
    0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0x32, 0x20, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x04, 0xf2, 0x20, 0x10, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02,
    0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x32, 0x20, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x36, 0x00, 0x00, 0x05, 0xf2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x08,
    0x32, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x46, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x32, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0xbf,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a,
    0x32, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
    0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x36, 0x00, 0x00, 0x08, 0xc2, 0x20, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, 0x00, 0x01,
    0x53, 0x54, 0x41, 0x54, 0x74, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
};
static const uint8_t yk___snk_fs_bytecode_hlsl4[620] = {
    0x44, 0x58, 0x42, 0x43, 0xd1, 0x93, 0x1f, 0x1b, 0x9d, 0x70, 0x90, 0xeb,
    0xc2, 0x7c, 0x26, 0x07, 0xdf, 0x52, 0xda, 0x49, 0x01, 0x00, 0x00, 0x00,
    0x6c, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
    0xd4, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00,
    0xf0, 0x01, 0x00, 0x00, 0x52, 0x44, 0x45, 0x46, 0x98, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x1c, 0x00, 0x00, 0x00, 0x00, 0x04, 0xff, 0xff, 0x10, 0x81, 0x00, 0x00,
    0x6d, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x69, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x5f, 0x74, 0x65, 0x78,
    0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x74, 0x65, 0x78,
    0x00, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28,
    0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 0x68, 0x61, 0x64,
    0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20,
    0x31, 0x30, 0x2e, 0x31, 0x00, 0xab, 0xab, 0xab, 0x49, 0x53, 0x47, 0x4e,
    0x44, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
    0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
    0x38, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
    0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0xab, 0xab, 0xab,
    0x4f, 0x53, 0x47, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0f, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65,
    0x74, 0x00, 0xab, 0xab, 0x53, 0x48, 0x44, 0x52, 0x94, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03,
    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04,
    0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00,
    0x62, 0x10, 0x00, 0x03, 0x32, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x62, 0x10, 0x00, 0x03, 0xf2, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x65, 0x00, 0x00, 0x03, 0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x68, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09,
    0xf2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07,
    0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x3e, 0x00, 0x00, 0x01, 0x53, 0x54, 0x41, 0x54, 0x74, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
static const char yk___snk_fs_source_hlsl4[641] = {
    0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x3c, 0x66, 0x6c,
    0x6f, 0x61, 0x74, 0x34, 0x3e, 0x20, 0x74, 0x65, 0x78, 0x20, 0x3a, 0x20,
    0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x28, 0x74, 0x30, 0x29,
    0x3b, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61,
    0x74, 0x65, 0x20, 0x5f, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x61, 0x6d, 0x70,
    0x6c, 0x65, 0x72, 0x20, 0x3a, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
    0x65, 0x72, 0x28, 0x73, 0x30, 0x29, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x61,
    0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66,
    0x72, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x73,
    0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32,
    0x20, 0x75, 0x76, 0x3b, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20,
    0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
    0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x53, 0x50,
    0x49, 0x52, 0x56, 0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x49, 0x6e,
    0x70, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c,
    0x6f, 0x61, 0x74, 0x32, 0x20, 0x75, 0x76, 0x20, 0x3a, 0x20, 0x54, 0x45,
    0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20,
    0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x63, 0x6f, 0x6c, 0x6f,
    0x72, 0x20, 0x3a, 0x20, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
    0x31, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63,
    0x74, 0x20, 0x53, 0x50, 0x49, 0x52, 0x56, 0x5f, 0x43, 0x72, 0x6f, 0x73,
    0x73, 0x5f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20,
    0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x66, 0x72,
    0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3a, 0x20, 0x53,
    0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x30, 0x3b, 0x0a, 0x7d,
    0x3b, 0x0a, 0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20,
    0x22, 0x22, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x66, 0x72, 0x61, 0x67,
    0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x23, 0x6c,
    0x69, 0x6e, 0x65, 0x20, 0x31, 0x31, 0x20, 0x22, 0x22, 0x0a, 0x20, 0x20,
    0x20, 0x20, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
    0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
    0x65, 0x28, 0x5f, 0x74, 0x65, 0x78, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c,
    0x65, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x29, 0x20, 0x2a, 0x20, 0x63, 0x6f,
    0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x53, 0x50, 0x49, 0x52,
    0x56, 0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x4f, 0x75, 0x74, 0x70,
    0x75, 0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x53, 0x50, 0x49, 0x52,
    0x56, 0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x49, 0x6e, 0x70, 0x75,
    0x74, 0x20, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75,
    0x74, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x75, 0x76, 0x20,
    0x3d, 0x20, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75,
    0x74, 0x2e, 0x75, 0x76, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f,
    0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f,
    0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b,
    0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x6d, 0x61,
    0x69, 0x6e, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x53, 0x50,
    0x49, 0x52, 0x56, 0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x4f, 0x75,
    0x74, 0x70, 0x75, 0x74, 0x20, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6f,
    0x75, 0x74, 0x70, 0x75, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x73,
    0x74, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e,
    0x66, 0x72, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d,
    0x20, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b,
    0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20,
    0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
    0x3b, 0x0a, 0x7d, 0x0a, 0x00,
};
#elif defined(YK__SOKOL_WGPU)
static const uint8_t yk___snk_vs_bytecode_wgpu[1520] = {
    0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x08, 0x00,
    0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00,
    0x0e, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
    0x2b, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
    0x32, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x07, 0x00, 0x03, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x37, 0x00,
    0x02, 0x00, 0x00, 0x00, 0xc2, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x2f, 0x2f, 0x20, 0x4f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50,
    0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x63, 0x6c, 0x69,
    0x65, 0x6e, 0x74, 0x20, 0x76, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x31, 0x30,
    0x30, 0x0a, 0x2f, 0x2f, 0x20, 0x4f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
    0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x63,
    0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x67, 0x6c,
    0x31, 0x30, 0x30, 0x0a, 0x2f, 0x2f, 0x20, 0x4f, 0x70, 0x4d, 0x6f, 0x64,
    0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
    0x20, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2d, 0x65, 0x6e, 0x76, 0x20,
    0x76, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x31, 0x2e, 0x30, 0x0a, 0x2f, 0x2f,
    0x20, 0x4f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f,
    0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x74, 0x61, 0x72, 0x67, 0x65,
    0x74, 0x2d, 0x65, 0x6e, 0x76, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x67, 0x6c,
    0x0a, 0x2f, 0x2f, 0x20, 0x4f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
    0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x65, 0x6e,
    0x74, 0x72, 0x79, 0x2d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x20, 0x6d, 0x61,
    0x69, 0x6e, 0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x31, 0x0a, 0x00,
    0x05, 0x00, 0x04, 0x00, 0x05, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e,
    0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x67, 0x6c, 0x5f, 0x50, 0x65, 0x72, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
    0x69, 0x6f, 0x6e, 0x00, 0x06, 0x00, 0x07, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x69, 0x6e, 0x74,
    0x53, 0x69, 0x7a, 0x65, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x43,
    0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00,
    0x06, 0x00, 0x07, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x67, 0x6c, 0x5f, 0x43, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61,
    0x6e, 0x63, 0x65, 0x00, 0x05, 0x00, 0x03, 0x00, 0x0e, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00,
    0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00, 0x76, 0x73, 0x5f, 0x70,
    0x61, 0x72, 0x61, 0x6d, 0x73, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00,
    0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x69, 0x73, 0x70,
    0x5f, 0x73, 0x69, 0x7a, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00,
    0x17, 0x00, 0x00, 0x00, 0x5f, 0x32, 0x33, 0x00, 0x05, 0x00, 0x03, 0x00,
    0x2a, 0x00, 0x00, 0x00, 0x75, 0x76, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,
    0x2b, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64,
    0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x2d, 0x00, 0x00, 0x00,
    0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00,
    0x2f, 0x00, 0x00, 0x00, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x00, 0x00,
    0x05, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x56,
    0x65, 0x72, 0x74, 0x65, 0x78, 0x49, 0x44, 0x00, 0x05, 0x00, 0x06, 0x00,
    0x33, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61,
    0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x48, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00,
    0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
    0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x15, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x17, 0x00, 0x00, 0x00,
    0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
    0x17, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x47, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x2b, 0x00, 0x00, 0x00,
    0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
    0x2d, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x47, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00,
    0x0b, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
    0x33, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
    0x13, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x15, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00,
    0x0a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00,
    0x0b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
    0x1e, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0x20, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00,
    0x0e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00,
    0x0f, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x2b, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
    0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
    0x3b, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x03, 0x00, 0x15, 0x00, 0x00, 0x00,
    0x11, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x16, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
    0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x20, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x11, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2c, 0x00, 0x05, 0x00,
    0x11, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
    0x1c, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2b, 0x00, 0x04, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
    0x2c, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
    0x1f, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f,
    0x20, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
    0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x3b, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00,
    0x2d, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
    0x2e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
    0x3b, 0x00, 0x04, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
    0x31, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x3b, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    0xf8, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3d, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
    0x13, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00,
    0x19, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x3d, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
    0x19, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00,
    0x1b, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
    0x83, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
    0x1b, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00,
    0x11, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
    0x21, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x24, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x51, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,
    0x22, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
    0x25, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
    0x41, 0x00, 0x05, 0x00, 0x27, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
    0x0e, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00,
    0x28, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3d, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
    0x2b, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x2a, 0x00, 0x00, 0x00,
    0x2c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
    0x3e, 0x00, 0x03, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00,
};
static const uint8_t yk___snk_fs_bytecode_wgpu[904] = {
    0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x08, 0x00,
    0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00,
    0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x05, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00,
    0x0a, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
    0x10, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x07, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x37, 0x00, 0x02, 0x00, 0x00, 0x00, 0xc2, 0x01, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x2f, 0x2f, 0x20, 0x4f, 0x70, 0x4d, 0x6f, 0x64,
    0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
    0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x76, 0x75, 0x6c, 0x6b,
    0x61, 0x6e, 0x31, 0x30, 0x30, 0x0a, 0x2f, 0x2f, 0x20, 0x4f, 0x70, 0x4d,
    0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
    0x65, 0x64, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x70,
    0x65, 0x6e, 0x67, 0x6c, 0x31, 0x30, 0x30, 0x0a, 0x2f, 0x2f, 0x20, 0x4f,
    0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
    0x73, 0x73, 0x65, 0x64, 0x20, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2d,
    0x65, 0x6e, 0x76, 0x20, 0x76, 0x75, 0x6c, 0x6b, 0x61, 0x6e, 0x31, 0x2e,
    0x30, 0x0a, 0x2f, 0x2f, 0x20, 0x4f, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
    0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x20, 0x74,
    0x61, 0x72, 0x67, 0x65, 0x74, 0x2d, 0x65, 0x6e, 0x76, 0x20, 0x6f, 0x70,
    0x65, 0x6e, 0x67, 0x6c, 0x0a, 0x2f, 0x2f, 0x20, 0x4f, 0x70, 0x4d, 0x6f,
    0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
    0x64, 0x20, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2d, 0x70, 0x6f, 0x69, 0x6e,
    0x74, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x65,
    0x20, 0x31, 0x0a, 0x00, 0x05, 0x00, 0x04, 0x00, 0x05, 0x00, 0x00, 0x00,
    0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00,
    0x0a, 0x00, 0x00, 0x00, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6c,
    0x6f, 0x72, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x0e, 0x00, 0x00, 0x00,
    0x74, 0x65, 0x78, 0x00, 0x05, 0x00, 0x03, 0x00, 0x12, 0x00, 0x00, 0x00,
    0x75, 0x76, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x16, 0x00, 0x00, 0x00,
    0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
    0x0a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x47, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00,
    0x22, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
    0x0e, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x47, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x16, 0x00, 0x00, 0x00,
    0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
    0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
    0x3b, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
    0x0d, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x17, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
    0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x20, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00,
    0x16, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x0f, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
    0x10, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,
    0x57, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
    0x0f, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
    0x85, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
    0x14, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00,
    0x0a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00,
    0x38, 0x00, 0x01, 0x00,
};
#elif defined(YK__SOKOL_DUMMY_BACKEND)
static const char *yk___snk_vs_source_dummy = "";
static const char *yk___snk_fs_source_dummy = "";
#else
#error                                                                         \
    "Please define one of YK__SOKOL_GLCORE33, YK__SOKOL_GLES2, YK__SOKOL_GLES3, YK__SOKOL_D3D11, YK__SOKOL_METAL, YK__SOKOL_WGPU or YK__SOKOL_DUMMY_BACKEND!"
#endif
#if !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP)
static void yk___snk_clipboard_copy(yk__nk_handle usr, const char *text,
                                    int len) {
  (void) usr;
  if (len == 0) { return; }
  yk__sapp_set_clipboard_string(text);
}
static void yk___snk_clipboard_paste(yk__nk_handle usr,
                                     struct yk__nk_text_edit *edit) {
  const char *text = yk__sapp_get_clipboard_string();
  if (text) { yk__nk_textedit_paste(edit, text, yk__nk_strlen(text)); }
  (void) usr;
}
#if defined(__EMSCRIPTEN__) && !defined(YK__SOKOL_DUMMY_BACKEND)
EM_JS(int, yk__snk_js_is_osx, (void), {
  if (navigator.userAgent.includes('Macintosh')) {
    return 1;
  } else {
    return 0;
  }
});
#endif
static bool yk___snk_is_osx(void) {
#if defined(YK__SOKOL_DUMMY_BACKEND)
  return false;
#elif defined(__EMSCRIPTEN__)
  return yk__snk_js_is_osx();
#elif defined(__APPLE__)
  return true;
#else
  return false;
#endif
}
#endif// !YK__SOKOL_NUKLEAR_NO_SOKOL_APP
YK__SOKOL_API_IMPL void yk__snk_setup(const yk__snk_desc_t *desc) {
  YK__SOKOL_ASSERT(desc);
  memset(&_snuklear, 0, sizeof(_snuklear));
  _snuklear.desc = *desc;
  _snuklear.desc.max_vertices =
      yk___snk_def(_snuklear.desc.max_vertices, 65536);
  _snuklear.desc.dpi_scale = yk___snk_def(_snuklear.desc.dpi_scale, 1.0f);
#if !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP)
  _snuklear.is_osx = yk___snk_is_osx();
#endif
  /* can keep color_format, depth_format and sample_count as is,
       since sokol_gfx.h will do its own default-value handling
    */
  /* initialize Nuklear */
  yk__nk_bool init_res = yk__nk_init_default(&_snuklear.ctx, 0);
  YK__SOKOL_ASSERT(1 == init_res);
  (void) init_res;// silence unused warning in release mode
#if !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP)
  _snuklear.ctx.clip.copy = yk___snk_clipboard_copy;
  _snuklear.ctx.clip.paste = yk___snk_clipboard_paste;
#endif
  /* create yk__sokol-gfx resources */
  yk__sg_push_debug_group("yk__sokol-nuklear");
  /* Vertex Buffer */
  _snuklear.vertex_buffer_size =
      (size_t) _snuklear.desc.max_vertices * sizeof(yk___snk_vertex_t);
  _snuklear.vbuf = yk__sg_make_buffer(
      &(yk__sg_buffer_desc){.usage = YK__SG_USAGE_STREAM,
                            .size = _snuklear.vertex_buffer_size,
                            .label = "yk__sokol-nuklear-vertices"});
  /* Index Buffer */
  _snuklear.index_buffer_size =
      (size_t) _snuklear.desc.max_vertices * 3 * sizeof(uint16_t);
  _snuklear.ibuf = yk__sg_make_buffer(
      &(yk__sg_buffer_desc){.type = YK__SG_BUFFERTYPE_INDEXBUFFER,
                            .usage = YK__SG_USAGE_STREAM,
                            .size = _snuklear.index_buffer_size,
                            .label = "yk__sokol-nuklear-indices"});
  /* Font Texture */
  if (!_snuklear.desc.no_default_font) {
    yk__nk_font_atlas_init_default(&_snuklear.atlas);
    yk__nk_font_atlas_begin(&_snuklear.atlas);
    int font_width = 0, font_height = 0;
    const void *pixels = yk__nk_font_atlas_bake(
        &_snuklear.atlas, &font_width, &font_height, YK__NK_FONT_ATLAS_RGBA32);
    YK__SOKOL_ASSERT((font_width > 0) && (font_height > 0));
    _snuklear.img = yk__sg_make_image(&(yk__sg_image_desc){
        .width = font_width,
        .height = font_height,
        .pixel_format = YK__SG_PIXELFORMAT_RGBA8,
        .wrap_u = YK__SG_WRAP_CLAMP_TO_EDGE,
        .wrap_v = YK__SG_WRAP_CLAMP_TO_EDGE,
        .min_filter = YK__SG_FILTER_LINEAR,
        .mag_filter = YK__SG_FILTER_LINEAR,
        .data.subimage[0][0] = {.ptr = pixels,
                                .size = (size_t) (font_width * font_height) *
                                        sizeof(uint32_t)},
        .label = "yk__sokol-nuklear-font"});
    yk__nk_font_atlas_end(&_snuklear.atlas,
                          yk__nk_handle_id((int) _snuklear.img.id), 0);
    yk__nk_font_atlas_cleanup(&_snuklear.atlas);
    if (_snuklear.atlas.default_font) {
      yk__nk_style_set_font(&_snuklear.ctx,
                            &_snuklear.atlas.default_font->handle);
    }
  }
/* Shader */
#if defined YK__SOKOL_METAL
  const char *vs_entry = "main0";
  const char *fs_entry = "main0";
#else
  const char *vs_entry = "main";
  const char *fs_entry = "main";
#endif
  yk__sg_range vs_bytecode = {.ptr = 0, .size = 0};
  yk__sg_range fs_bytecode = {.ptr = 0, .size = 0};
  const char *vs_source = 0;
  const char *fs_source = 0;
#if defined(YK__SOKOL_GLCORE33)
  vs_source = yk___snk_vs_source_glsl330;
  fs_source = yk___snk_fs_source_glsl330;
#elif defined(YK__SOKOL_GLES2) || defined(YK__SOKOL_GLES3)
  vs_source = yk___snk_vs_source_glsl100;
  fs_source = yk___snk_fs_source_glsl100;
#elif defined(YK__SOKOL_METAL)
  switch (yk__sg_query_backend()) {
    case YK__SG_BACKEND_METAL_MACOS:
      vs_bytecode = YK__SG_RANGE(yk___snk_vs_bytecode_metal_macos);
      fs_bytecode = YK__SG_RANGE(yk___snk_fs_bytecode_metal_macos);
      break;
    case YK__SG_BACKEND_METAL_IOS:
      vs_bytecode = YK__SG_RANGE(yk___snk_vs_bytecode_metal_ios);
      fs_bytecode = YK__SG_RANGE(yk___snk_fs_bytecode_metal_ios);
      break;
    default:
      vs_source = yk___snk_vs_source_metal_sim;
      fs_source = yk___snk_fs_source_metal_sim;
      break;
  }
#elif defined(YK__SOKOL_D3D11)
  vs_bytecode = YK__SG_RANGE(yk___snk_vs_bytecode_hlsl4);
  fs_bytecode = YK__SG_RANGE(yk___snk_fs_bytecode_hlsl4);
#elif defined(YK__SOKOL_WGPU)
  vs_bytecode = YK__SG_RANGE(yk___snk_vs_bytecode_wgpu);
  fs_bytecode = YK__SG_RANGE(yk___snk_fs_bytecode_wgpu);
#else
  vs_source = yk___snk_vs_source_dummy;
  fs_source = yk___snk_fs_source_dummy;
#endif
  /* Shader */
  _snuklear.shd = yk__sg_make_shader(&(yk__sg_shader_desc){
      .attrs =
          {
              [0] = {.name = "position",
                     .sem_name = "TEXCOORD",
                     .sem_index = 0},
              [1] = {.name = "texcoord0",
                     .sem_name = "TEXCOORD",
                     .sem_index = 1},
              [2] = {.name = "color0", .sem_name = "TEXCOORD", .sem_index = 2},
          },
      .vs =
          {
              .source = vs_source,
              .bytecode = vs_bytecode,
              .entry = vs_entry,
              .d3d11_target = "vs_4_0",
              .uniform_blocks[0] = {.size = sizeof(yk___snk_vs_params_t),
                                    .uniforms[0] =
                                        {
                                            .name = "vs_params",
                                            .type = YK__SG_UNIFORMTYPE_FLOAT4,
                                            .array_count = 1,
                                        }},
          },
      .fs =
          {
              .source = fs_source,
              .bytecode = fs_bytecode,
              .entry = fs_entry,
              .d3d11_target = "ps_4_0",
              .images[0] = {.name = "tex",
                            .image_type = YK__SG_IMAGETYPE_2D,
                            .sampler_type = YK__SG_SAMPLERTYPE_FLOAT},
          },
      .label = "yk__sokol-nuklear-shader"});
  /* Pipeline */
  _snuklear.pip = yk__sg_make_pipeline(&(yk__sg_pipeline_desc){
      .layout = {.attrs = {[0] = {.offset = offsetof(yk___snk_vertex_t, pos),
                                  .format = YK__SG_VERTEXFORMAT_FLOAT2},
                           [1] = {.offset = offsetof(yk___snk_vertex_t, uv),
                                  .format = YK__SG_VERTEXFORMAT_FLOAT2},
                           [2] = {.offset = offsetof(yk___snk_vertex_t, col),
                                  .format = YK__SG_VERTEXFORMAT_UBYTE4N}}},
      .shader = _snuklear.shd,
      .index_type = YK__SG_INDEXTYPE_UINT16,
      .sample_count = _snuklear.desc.sample_count,
      .depth.pixel_format = _snuklear.desc.depth_format,
      .colors[0] =
          {.pixel_format = _snuklear.desc.color_format,
           .write_mask = YK__SG_COLORMASK_RGB,
           .blend =
               {
                   .enabled = true,
                   .src_factor_rgb = YK__SG_BLENDFACTOR_SRC_ALPHA,
                   .dst_factor_rgb = YK__SG_BLENDFACTOR_ONE_MINUS_SRC_ALPHA,
               }},
      .label = "yk__sokol-nuklear-pipeline"});
  yk__sg_pop_debug_group();
}
YK__SOKOL_API_IMPL void yk__snk_shutdown(void) {
  yk__nk_free(&_snuklear.ctx);
  yk__nk_font_atlas_clear(&_snuklear.atlas);
  /* NOTE: it's valid to call the destroy funcs with YK__SG_INVALID_ID */
  yk__sg_push_debug_group("yk__sokol-nuklear");
  yk__sg_destroy_pipeline(_snuklear.pip);
  yk__sg_destroy_shader(_snuklear.shd);
  yk__sg_destroy_image(_snuklear.img);
  yk__sg_destroy_buffer(_snuklear.ibuf);
  yk__sg_destroy_buffer(_snuklear.vbuf);
  yk__sg_pop_debug_group();
}
YK__SOKOL_API_IMPL struct yk__nk_context *yk__snk_new_frame(void) {
#if !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP)
  yk__nk_input_begin(&_snuklear.ctx);
  if (_snuklear.mouse_did_move) {
    yk__nk_input_motion(&_snuklear.ctx, _snuklear.mouse_pos[0],
                        _snuklear.mouse_pos[1]);
    _snuklear.mouse_did_move = false;
  }
  if (_snuklear.mouse_did_scroll) {
    yk__nk_input_scroll(&_snuklear.ctx, yk__nk_vec2(_snuklear.mouse_scroll[0],
                                                    _snuklear.mouse_scroll[1]));
    _snuklear.mouse_did_scroll = false;
  }
  for (int i = 0; i < YK__NK_BUTTON_MAX; i++) {
    if (_snuklear.btn_down[i]) {
      _snuklear.btn_down[i] = false;
      yk__nk_input_button(&_snuklear.ctx, (enum yk__nk_buttons) i,
                          _snuklear.mouse_pos[0], _snuklear.mouse_pos[1], 1);
    } else if (_snuklear.btn_up[i]) {
      _snuklear.btn_up[i] = false;
      yk__nk_input_button(&_snuklear.ctx, (enum yk__nk_buttons) i,
                          _snuklear.mouse_pos[0], _snuklear.mouse_pos[1], 0);
    }
  }
  const size_t char_buffer_len = strlen(_snuklear.char_buffer);
  if (char_buffer_len > 0) {
    for (size_t i = 0; i < char_buffer_len; i++) {
      yk__nk_input_char(&_snuklear.ctx, _snuklear.char_buffer[i]);
    }
    memset(_snuklear.char_buffer, 0, YK__NK_INPUT_MAX);
  }
  for (int i = 0; i < YK__NK_KEY_MAX; i++) {
    if (_snuklear.keys_down[i]) {
      yk__nk_input_key(&_snuklear.ctx, (enum yk__nk_keys) i, true);
      _snuklear.keys_down[i] = 0;
    }
    if (_snuklear.keys_up[i]) {
      yk__nk_input_key(&_snuklear.ctx, (enum yk__nk_keys) i, false);
      _snuklear.keys_up[i] = 0;
    }
  }
  yk__nk_input_end(&_snuklear.ctx);
#endif
  yk__nk_clear(&_snuklear.ctx);
  return &_snuklear.ctx;
}
YK__SOKOL_API_IMPL void yk__snk_render(int width, int height) {
  static const struct yk__nk_draw_vertex_layout_element vertex_layout[] = {
      {YK__NK_VERTEX_POSITION, YK__NK_FORMAT_FLOAT,
       YK__NK_OFFSETOF(struct yk___snk_vertex_t, pos)},
      {YK__NK_VERTEX_TEXCOORD, YK__NK_FORMAT_FLOAT,
       YK__NK_OFFSETOF(struct yk___snk_vertex_t, uv)},
      {YK__NK_VERTEX_COLOR, YK__NK_FORMAT_R8G8B8A8,
       YK__NK_OFFSETOF(struct yk___snk_vertex_t, col)},
      {YK__NK_VERTEX_LAYOUT_END}};
  struct yk__nk_convert_config cfg = {.shape_AA = YK__NK_ANTI_ALIASING_ON,
                                      .line_AA = YK__NK_ANTI_ALIASING_ON,
                                      .vertex_layout = vertex_layout,
                                      .vertex_size = sizeof(yk___snk_vertex_t),
                                      .vertex_alignment = 4,
                                      .circle_segment_count = 22,
                                      .curve_segment_count = 22,
                                      .arc_segment_count = 22,
                                      .global_alpha = 1.0f};
  _snuklear.vs_params.disp_size[0] = (float) width;
  _snuklear.vs_params.disp_size[1] = (float) height;
  /* Setup vert/index buffers and convert */
  struct yk__nk_buffer cmds, verts, idx;
  yk__nk_buffer_init_default(&cmds);
  yk__nk_buffer_init_default(&verts);
  yk__nk_buffer_init_default(&idx);
  yk__nk_convert(&_snuklear.ctx, &cmds, &verts, &idx, &cfg);
  /* Check for vertex- and index-buffer overflow, assert in debug-mode,
       otherwise silently skip rendering
    */
  const bool vertex_buffer_overflow =
      yk__nk_buffer_total(&verts) > _snuklear.vertex_buffer_size;
  const bool index_buffer_overflow =
      yk__nk_buffer_total(&idx) > _snuklear.index_buffer_size;
  YK__SOKOL_ASSERT(!vertex_buffer_overflow && !index_buffer_overflow);
  if (!vertex_buffer_overflow && !index_buffer_overflow) {
    /* Setup rendering */
    const float dpi_scale = _snuklear.desc.dpi_scale;
    const int fb_width = (int) (_snuklear.vs_params.disp_size[0] * dpi_scale);
    const int fb_height = (int) (_snuklear.vs_params.disp_size[1] * dpi_scale);
    yk__sg_apply_viewport(0, 0, fb_width, fb_height, true);
    yk__sg_apply_scissor_rect(0, 0, fb_width, fb_height, true);
    yk__sg_apply_pipeline(_snuklear.pip);
    yk__sg_apply_uniforms(YK__SG_SHADERSTAGE_VS, 0,
                          &YK__SG_RANGE(_snuklear.vs_params));
    yk__sg_update_buffer(_snuklear.vbuf,
                         &(yk__sg_range){yk__nk_buffer_memory_const(&verts),
                                         yk__nk_buffer_total(&verts)});
    yk__sg_update_buffer(_snuklear.ibuf,
                         &(yk__sg_range){yk__nk_buffer_memory_const(&idx),
                                         yk__nk_buffer_total(&idx)});
    /* Iterate through the command list, rendering each one */
    const struct yk__nk_draw_command *cmd = NULL;
    int idx_offset = 0;
    yk__nk_draw_foreach(cmd, &_snuklear.ctx, &cmds) {
      if (cmd->elem_count > 0) {
        yk__sg_apply_bindings(
            &(yk__sg_bindings){.fs_images[0] = _snuklear.img,
                               .vertex_buffers[0] = _snuklear.vbuf,
                               .index_buffer = _snuklear.ibuf,
                               .vertex_buffer_offsets[0] = 0,
                               .index_buffer_offset = idx_offset});
        yk__sg_apply_scissor_rectf(
            cmd->clip_rect.x * dpi_scale, cmd->clip_rect.y * dpi_scale,
            cmd->clip_rect.w * dpi_scale, cmd->clip_rect.h * dpi_scale, true);
        yk__sg_draw(0, (int) cmd->elem_count, 1);
        idx_offset += (int) cmd->elem_count * (int) sizeof(uint16_t);
      }
    }
    yk__sg_apply_scissor_rect(0, 0, fb_width, fb_height, true);
  }
  /* Cleanup */
  yk__nk_buffer_free(&cmds);
  yk__nk_buffer_free(&verts);
  yk__nk_buffer_free(&idx);
}
#if !defined(YK__SOKOL_NUKLEAR_NO_SOKOL_APP)
YK___SOKOL_PRIVATE bool yk___snk_is_ctrl(uint32_t modifiers) {
  if (_snuklear.is_osx) {
    return 0 != (modifiers & YK__SAPP_MODIFIER_SUPER);
  } else {
    return 0 != (modifiers & YK__SAPP_MODIFIER_CTRL);
  }
}
YK___SOKOL_PRIVATE void yk___snk_append_char(uint32_t char_code) {
  size_t idx = strlen(_snuklear.char_buffer);
  if (idx < YK__NK_INPUT_MAX) { _snuklear.char_buffer[idx] = (char) char_code; }
}
YK___SOKOL_PRIVATE enum yk__nk_keys
yk___snk_event_to_nuklearkey(const yk__sapp_event *ev) {
  switch (ev->key_code) {
    case YK__SAPP_KEYCODE_C:
      if (yk___snk_is_ctrl(ev->modifiers)) {
        return YK__NK_KEY_COPY;
      } else {
        return YK__NK_KEY_NONE;
      }
      break;
    case YK__SAPP_KEYCODE_X:
      if (yk___snk_is_ctrl(ev->modifiers)) {
        return YK__NK_KEY_CUT;
      } else {
        return YK__NK_KEY_NONE;
      }
      break;
    case YK__SAPP_KEYCODE_A:
      if (yk___snk_is_ctrl(ev->modifiers)) {
        return YK__NK_KEY_TEXT_SELECT_ALL;
      } else {
        return YK__NK_KEY_NONE;
      }
      break;
    case YK__SAPP_KEYCODE_Z:
      if (yk___snk_is_ctrl(ev->modifiers)) {
        if (ev->modifiers & YK__SAPP_MODIFIER_SHIFT) {
          return YK__NK_KEY_TEXT_REDO;
        } else {
          return YK__NK_KEY_TEXT_UNDO;
        }
      } else {
        return YK__NK_KEY_NONE;
      }
      break;
    case YK__SAPP_KEYCODE_DELETE:
      return YK__NK_KEY_DEL;
    case YK__SAPP_KEYCODE_ENTER:
      return YK__NK_KEY_ENTER;
    case YK__SAPP_KEYCODE_TAB:
      return YK__NK_KEY_TAB;
    case YK__SAPP_KEYCODE_BACKSPACE:
      return YK__NK_KEY_BACKSPACE;
    case YK__SAPP_KEYCODE_UP:
      return YK__NK_KEY_UP;
    case YK__SAPP_KEYCODE_DOWN:
      return YK__NK_KEY_DOWN;
    case YK__SAPP_KEYCODE_LEFT:
      return YK__NK_KEY_LEFT;
    case YK__SAPP_KEYCODE_RIGHT:
      return YK__NK_KEY_RIGHT;
    case YK__SAPP_KEYCODE_LEFT_SHIFT:
      return YK__NK_KEY_SHIFT;
    case YK__SAPP_KEYCODE_RIGHT_SHIFT:
      return YK__NK_KEY_SHIFT;
    case YK__SAPP_KEYCODE_LEFT_CONTROL:
      return YK__NK_KEY_CTRL;
    case YK__SAPP_KEYCODE_RIGHT_CONTROL:
      return YK__NK_KEY_CTRL;
    default:
      return YK__NK_KEY_NONE;
  }
}
YK__SOKOL_API_IMPL void yk__snk_handle_event(const yk__sapp_event *ev) {
  const float dpi_scale = _snuklear.desc.dpi_scale;
  switch (ev->type) {
    case YK__SAPP_EVENTTYPE_MOUSE_DOWN:
      _snuklear.mouse_pos[0] = (int) (ev->mouse_x / dpi_scale);
      _snuklear.mouse_pos[1] = (int) (ev->mouse_y / dpi_scale);
      switch (ev->mouse_button) {
        case YK__SAPP_MOUSEBUTTON_LEFT:
          _snuklear.btn_down[YK__NK_BUTTON_LEFT] = true;
          break;
        case YK__SAPP_MOUSEBUTTON_RIGHT:
          _snuklear.btn_down[YK__NK_BUTTON_RIGHT] = true;
          break;
        case YK__SAPP_MOUSEBUTTON_MIDDLE:
          _snuklear.btn_down[YK__NK_BUTTON_MIDDLE] = true;
          break;
        default:
          break;
      }
      break;
    case YK__SAPP_EVENTTYPE_MOUSE_UP:
      _snuklear.mouse_pos[0] = (int) (ev->mouse_x / dpi_scale);
      _snuklear.mouse_pos[1] = (int) (ev->mouse_y / dpi_scale);
      switch (ev->mouse_button) {
        case YK__SAPP_MOUSEBUTTON_LEFT:
          _snuklear.btn_up[YK__NK_BUTTON_LEFT] = true;
          break;
        case YK__SAPP_MOUSEBUTTON_RIGHT:
          _snuklear.btn_up[YK__NK_BUTTON_RIGHT] = true;
          break;
        case YK__SAPP_MOUSEBUTTON_MIDDLE:
          _snuklear.btn_up[YK__NK_BUTTON_MIDDLE] = true;
          break;
        default:
          break;
      }
      break;
    case YK__SAPP_EVENTTYPE_MOUSE_MOVE:
      _snuklear.mouse_pos[0] = (int) (ev->mouse_x / dpi_scale);
      _snuklear.mouse_pos[1] = (int) (ev->mouse_y / dpi_scale);
      _snuklear.mouse_did_move = true;
      break;
    case YK__SAPP_EVENTTYPE_MOUSE_ENTER:
    case YK__SAPP_EVENTTYPE_MOUSE_LEAVE:
      for (int i = 0; i < YK__NK_BUTTON_MAX; i++) {
        _snuklear.btn_down[i] = false;
        _snuklear.btn_up[i] = false;
      }
      break;
    case YK__SAPP_EVENTTYPE_MOUSE_SCROLL:
      _snuklear.mouse_scroll[0] = ev->scroll_x;
      _snuklear.mouse_scroll[1] = ev->scroll_y;
      _snuklear.mouse_did_scroll = true;
      break;
    case YK__SAPP_EVENTTYPE_TOUCHES_BEGAN:
      _snuklear.btn_down[YK__NK_BUTTON_LEFT] = true;
      _snuklear.mouse_pos[0] = (int) (ev->touches[0].pos_x / dpi_scale);
      _snuklear.mouse_pos[1] = (int) (ev->touches[0].pos_y / dpi_scale);
      _snuklear.mouse_did_move = true;
      break;
    case YK__SAPP_EVENTTYPE_TOUCHES_MOVED:
      _snuklear.mouse_pos[0] = (int) (ev->touches[0].pos_x / dpi_scale);
      _snuklear.mouse_pos[1] = (int) (ev->touches[0].pos_y / dpi_scale);
      _snuklear.mouse_did_move = true;
      break;
    case YK__SAPP_EVENTTYPE_TOUCHES_ENDED:
      _snuklear.btn_up[YK__NK_BUTTON_LEFT] = true;
      _snuklear.mouse_pos[0] = (int) (ev->touches[0].pos_x / dpi_scale);
      _snuklear.mouse_pos[1] = (int) (ev->touches[0].pos_y / dpi_scale);
      _snuklear.mouse_did_move = true;
      break;
    case YK__SAPP_EVENTTYPE_TOUCHES_CANCELLED:
      _snuklear.btn_up[YK__NK_BUTTON_LEFT] = false;
      _snuklear.btn_down[YK__NK_BUTTON_LEFT] = false;
      break;
    case YK__SAPP_EVENTTYPE_KEY_DOWN:
      /* intercept Ctrl-V, this is handled via EVENTTYPE_CLIPBOARD_PASTED */
      if (yk___snk_is_ctrl(ev->modifiers) &&
          (ev->key_code == YK__SAPP_KEYCODE_V)) {
        break;
      }
      /* on web platform, don't forward Ctrl-X, Ctrl-V to the browser */
      if (yk___snk_is_ctrl(ev->modifiers) &&
          (ev->key_code == YK__SAPP_KEYCODE_X)) {
        yk__sapp_consume_event();
      }
      if (yk___snk_is_ctrl(ev->modifiers) &&
          (ev->key_code == YK__SAPP_KEYCODE_C)) {
        yk__sapp_consume_event();
      }
      _snuklear.keys_down[yk___snk_event_to_nuklearkey(ev)] = true;
      break;
    case YK__SAPP_EVENTTYPE_KEY_UP:
      /* intercept Ctrl-V, this is handled via EVENTTYPE_CLIPBOARD_PASTED */
      if (yk___snk_is_ctrl(ev->modifiers) &&
          (ev->key_code == YK__SAPP_KEYCODE_V)) {
        break;
      }
      /* on web platform, don't forward Ctrl-X, Ctrl-V to the browser */
      if (yk___snk_is_ctrl(ev->modifiers) &&
          (ev->key_code == YK__SAPP_KEYCODE_X)) {
        yk__sapp_consume_event();
      }
      if (yk___snk_is_ctrl(ev->modifiers) &&
          (ev->key_code == YK__SAPP_KEYCODE_C)) {
        yk__sapp_consume_event();
      }
      _snuklear.keys_up[yk___snk_event_to_nuklearkey(ev)] = true;
      break;
    case YK__SAPP_EVENTTYPE_CHAR:
      if ((ev->char_code >= 32) && (ev->char_code != 127) &&
          (0 ==
           (ev->modifiers & (YK__SAPP_MODIFIER_ALT | YK__SAPP_MODIFIER_CTRL |
                             YK__SAPP_MODIFIER_SUPER)))) {
        yk___snk_append_char(ev->char_code);
      }
      break;
    case YK__SAPP_EVENTTYPE_CLIPBOARD_PASTED:
      _snuklear.keys_down[YK__NK_KEY_PASTE] =
          _snuklear.keys_up[YK__NK_KEY_PASTE] = true;
      break;
    default:
      break;
  }
}
YK__SOKOL_API_IMPL yk__nk_flags yk__snk_edit_string(
    struct yk__nk_context *ctx, yk__nk_flags flags, char *memory, int *len,
    int max, yk__nk_plugin_filter filter) {
  yk__nk_flags event = yk__nk_edit_string(ctx, flags, memory, len, max, filter);
  if ((event & YK__NK_EDIT_ACTIVATED) && !yk__sapp_keyboard_shown()) {
    yk__sapp_show_keyboard(true);
  }
  if ((event & YK__NK_EDIT_DEACTIVATED) && yk__sapp_keyboard_shown()) {
    yk__sapp_show_keyboard(false);
  }
  return event;
}
#endif// YK__SOKOL_NUKLEAR_NO_SOKOL_APP
#endif// YK__SOKOL_IMPL
